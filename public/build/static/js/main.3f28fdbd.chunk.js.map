{"version":3,"sources":["services/auth.js","context/index.js","components/AppLayout.js","services/fixtures.js","services/pronogeeks.js","components/Fixture.js","pages/Signup.js","pages/Login.js","pages/Home.js","services/user.js","pages/Profile.js","services/seasons.js","pages/PronogeeksSearch.js","customHooks/index.js","services/apiFootball.js","pages/Pronogeeks.js","services/geekLeague.js","pages/NewGeekLeague.js","pages/GeekLeague.js","router.js","serviceWorker.js","index.js"],"names":["authService","axios","create","baseURL","withCredentials","signup","user","a","post","login","userData","getProfile","updateProfile","put","updatePhoto","get","data","logout","Context","createContext","CtxProvider","children","useState","setUser","useEffect","loginUser","getSession","Provider","value","logoutUser","AppLayout","useContext","history","useHistory","logoutButton","push","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","src","photo","alt","width","height","viewBox","fill","xmlns","fillRule","d","fixtureService","getFixture","fixtureID","fixture","pronogeekService","savePronogeeks","homeScore","awayScore","pronogeekExists","pronogeek","homeProno","awayProno","_id","Fixture","setFixture","setPronogeek","matchStarted","setMatchStarted","setHomeScore","setAwayScore","saveSuccess","setSaveSuccess","seasonID","season","matchweekNumber","matchweek","Date","date","now","seasons","filter","length","pronogeekFound","matchweekIndex","matchweeks","forEach","i","number","toString","pronogeeks","fetchFixturesAndOdds","statusShort","minutes","savePronos","getTime","openNotification","parseInt","homeTeam","name","awayTeam","error","catch","err","response","message","fr","setTimeout","title","notification","description","placement","dateTransform","weekDay","getDay","month","getMonth","getMinutes","fullDate","getDate","getFullYear","fullTime","getHours","logo","stadium","goalsHomeTeam","goalsAwayTeam","timeElapsed","oddsWinHome","oddsDraw","oddsWinAway","min","onChange","e","target","placeholder","disabled","points","bonusFavTeam","style","padding","paddingTop","active","Signup","Form","useForm","form","setPhoto","fileName","setFileName","signupDone","setSignupDone","onFinish","values","test","String","email","toLowerCase","photoUrl","process","secure_url","size","tip","color","fontSize","indicator","LoadingOutlined","spin","marginBottom","layout","initialValues","remember","Item","label","rules","required","borderRadius","Password","htmlFor","files","file","FormData","append","display","justifyContent","marginTop","Login","warning","Home","userService","getUsers","users","updateProfileWithSeason","newSeason","updateProfileWithMatchweek","updateFavTeam","favTeam","fetchPlayers","Profile","photoLoading","setPhotoLoading","showModal","setShowModal","usernameInput","setUsernameInput","usernameChanged","setUsernameChanged","setSeasonID","seasonRanking","setSeasonRanking","userRanking","setUserRanking","uploadPhoto","saveUsername","saved","username","players","rankedPlayers","sort","b","totalPoints","map","player","indexOf","rankedPlayers20","slice","getPlayers","setRank","num","year","leagueName","geekLeagues","league","index","key","seas","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","seasonService","getSeasonData","getMatchweekFixtures","matchweekNum","fixtures","PronogeeksSearch","match","params","seasonTeams","setSeasonTeams","setNewSeason","setMatchweek","initialValue","setValue","useInput","setNewUser","rankedTeams","fixturesToCome","nextMatchweek","nextDate","fetchSeason","saveFavTeam","team","apiFootballService","updateFixturesStatus","updateOdds","Pronogeeks","setSeason","setFixtures","matchweekPoints","setMatchweekPoints","matchweekBonus","setMatchweekBonus","matchweekCorrects","setMatchweekCorrects","seasonUser","matchweekUser","bonusPoints","numberCorrects","fetchFixtures","fetchStatus","fetchOdds","previousPage","nextPage","background","geekLeagueService","createLeague","geekLeague","Option","Select","NewGeekLeague","setUsers","creating","setCreating","allUsers","oneUser","fetchUsers","newLeague","geeks","mode","overflow","textAlign","optionLabelProp","optionFilterProp","GeekLeague","geekLeagueID","ProvRanking","NotFound","router","component","path","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.3f28fdbd.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/auth`\n\nconst authService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const signup = async user => {\n    await authService.post('/signup', user)\n    return true\n}\n\nexport const login = async userData => {\n    await authService.post('/login', userData)\n    return getProfile()\n}\n\nexport const updateProfile = async(userData) => {\n    await authService.put('/edit', userData)\n    return getProfile()\n}\n\nexport const updatePhoto = async(userData) => {\n    await authService.put('/editPic', userData)\n    return getProfile()\n}\n\nexport const getProfile = async() => {\n    const {\n        data: {\n            user\n        }\n    } = await authService.get('/profile')\n    return user\n}\n\nexport const logout = async() => {\n    const {\n        data\n    } = await authService.get('/logout')\n    return data\n}","import React, { useState, useEffect, createContext } from 'react'\nimport { getProfile } from '../services/auth'\n\nexport const Context = createContext()\n\nconst CtxProvider = ({ children }) => {\n\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        const getSession = async () => {\n            const user = await getProfile()\n            loginUser(user)\n        }\n        getSession()\n    }, [])\n\n    const loginUser = user => setUser(user)\n\n    const logoutUser = () => setUser(null)\n\n    return (\n        <Context.Provider\n            value={{\n                user,\n                loginUser,\n                logoutUser\n            }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default CtxProvider\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { Context } from '../context'\nimport { logout } from '../services/auth'\n\nconst AppLayout = ({ children }) => {\n    const { user, logoutUser } = useContext(Context)\n    const history = useHistory()\n\n    const logoutButton = async () => {\n        await logout()\n        logoutUser()\n        history.push('/')\n    }\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark my-navbar\">\n                <Link className=\"navbar-brand my-brand\" to='/'><h1>pronogeeks</h1></Link>\n                <button className=\"navbar-toggler my-navbar-btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#my-navbar-toggle\" aria-controls=\"my-navbar-toggle\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\" /></button>\n\n                <div className=\"collapse navbar-collapse\" id=\"my-navbar-toggle\">\n                    <ul className=\"navbar-nav mt-2 mt-lg-0\">\n                        {user ? (\n                            <>\n                                <li className=\"nav-item\">\n                                    <Link to='/' className=\"nav-link\" onClick={logoutButton}>Déconnexion</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to='/pronogeeks/5f67f525d7b14148997ee3eb'>Mes pronogeeks</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/profile\"><img className='profile-pic-navbar' src={user.photo} alt='Profile' /></Link>\n                                </li>\n                            </>\n                        ) : (\n                                <>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to=\"/login\">Se connecter</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to=\"/signup\">Créer un compte</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to=\"/\"><svg width=\"1.6em\" height=\"1.6em\" viewBox=\"0 0 16 16\" className=\"bi bi-house-fill my-home-icon\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\" d=\"M8 3.293l6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\" />\n                                            <path fillRule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\" />\n                                        </svg> <span className=\"sr-only\">(current)</span></Link>\n                                    </li>\n                                </>\n                            )}\n                    </ul>\n                </div>\n            </nav>\n            <div className='my-content'>\n                {children}\n            </div>\n        </>\n    )\n}\n\nexport default AppLayout\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/fixtures`\n\nconst fixtureService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const getFixture = async fixtureID => {\n    const {\n        data: {\n            fixture\n        }\n    } = await fixtureService.get(`/${fixtureID}`)\n    return fixture\n}","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/pronogeeks`\n\nconst pronogeekService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const savePronogeeks = async(homeScore, awayScore, fixtureID) => {\n    const {\n        data: {\n            pronogeek: pronogeekExists\n        }\n    } = await pronogeekService.get(`/${fixtureID}`)\n    if (!pronogeekExists) {\n        const {\n            data: {\n                pronogeek\n            }\n        } = await pronogeekService.post(`/${fixtureID}`, {\n            homeProno: homeScore,\n            awayProno: awayScore\n        })\n        return pronogeek\n    } else {\n        const {\n            data: {\n                pronogeek\n            }\n        } = await pronogeekService.put(`/${pronogeekExists._id}`, {\n            homeProno: homeScore,\n            awayProno: awayScore\n        })\n        return pronogeek\n    }\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { getFixture } from '../services/fixtures'\nimport { savePronogeeks } from '../services/pronogeeks'\nimport { Skeleton, notification } from 'antd'\nimport { Context } from '../context'\n\nconst Fixture = ({ fixtureID }) => {\n    const [fixture, setFixture] = useState(null)\n    const [pronogeek, setPronogeek] = useState(null)\n    const [matchStarted, setMatchStarted] = useState(false)\n    const [homeScore, setHomeScore] = useState(null)\n    const [awayScore, setAwayScore] = useState(null)\n    const [saveSuccess, setSaveSuccess] = useState(false)\n    const { user } = useContext(Context)\n\n    useEffect(() => {\n        const fetchFixturesAndOdds = async (fixtureID) => {\n            const fixture = await getFixture(fixtureID)\n            const seasonID = fixture.season\n            const matchweekNumber = fixture.matchweek\n            if (new Date(fixture.date) - Date.now() < 0) setMatchStarted(true)\n            setFixture(fixture)\n            let season = user.seasons.filter(season => season.season._id === seasonID)\n            if (season.length > 0) season = season[0]\n            let pronogeek = { homeProno: '', awayProno: '' };\n            let pronogeekFound = [];\n            let matchweekIndex = 0;\n            if (season.matchweeks.length > 0) {\n                season.matchweeks.forEach((matchweek, i) => {\n                    if (matchweek.number.toString() === matchweekNumber.toString()) matchweekIndex = i\n                })\n                if (season.matchweeks[matchweekIndex].pronogeeks.length > 0) pronogeekFound = season.matchweeks[matchweekIndex].pronogeeks.filter(pronogeek => pronogeek.fixture === fixtureID)\n            }\n            if (pronogeekFound.length > 0) pronogeek = pronogeekFound[0]\n            setPronogeek(pronogeek)\n            setHomeScore(pronogeek.homeProno)\n            setAwayScore(pronogeek.awayProno)\n        }\n        fetchFixturesAndOdds(fixtureID)\n    }, [fixtureID, user.seasons])\n\n    const savePronos = async () => {\n\n        // Error message if someone takes out the \"disabled\" property of a passed game to change their pronostics\n        if (new Date(fixture.date).getTime() - Date.now() < 0) return openNotification('error', 'Erreur', 'Ce match est déjà commencé ou fini. Tu ne peux plus changer ton prono.')\n\n        // Warning message if one of the inputs doesn't have a number\n        if ((!homeScore || !awayScore) && (parseInt(homeScore) !== 0 || parseInt(awayScore) !== 0)) return openNotification('warning', 'Attention', `Tu n'as pas défini de score pour le match ${fixture.homeTeam.name} - ${fixture.awayTeam.name}. Prono non enregistré.`)\n\n        let error = false\n        await savePronogeeks(homeScore, awayScore, fixtureID).catch(err => {\n            openNotification('warning', 'Attention', err.response.data.message.fr)\n            error = true\n        })\n        if (!error) {\n            openNotification('success', 'Enregistré', `Pronogeek enregistré pour ${fixture.homeTeam.name} - ${fixture.awayTeam.name}`)\n            setSaveSuccess(true)\n            setTimeout(() => setSaveSuccess(false), 3000)\n        }\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    const dateTransform = (date) => {\n        date = new Date(date)\n        let weekDay = date.getDay()\n        let month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n        let minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes()\n        switch (weekDay) {\n            case 0:\n                weekDay = 'dimanche'\n                break\n            case 1:\n                weekDay = 'lundi'\n                break;\n            case 2:\n                weekDay = 'mardi'\n                break;\n            case 3:\n                weekDay = 'mercredi'\n                break\n            case 4:\n                weekDay = 'jeudi'\n                break;\n            case 5:\n                weekDay = 'vendredi'\n                break;\n            case 6:\n                weekDay = 'samedi'\n                break;\n            default:\n                weekDay = ''\n        }\n        return { fullDate: `${weekDay} ${date.getDate()}/${month}/${date.getFullYear()}`, fullTime: `${date.getHours()}h${minutes}` }\n    }\n\n    const statusTranform = (statusShort, minutes) => {\n        if (statusShort !== 'TBD' &&\n            statusShort !== 'NS' &&\n            statusShort !== '1H' &&\n            statusShort !== 'HT' &&\n            statusShort !== '2H' &&\n            statusShort !== 'ET' &&\n            statusShort !== 'P' &&\n            statusShort !== 'BT' &&\n            statusShort !== 'SUSP' &&\n            statusShort !== 'INT' &&\n            statusShort !== 'PST') {\n            return 'Match terminé'\n        } else if (statusShort === 'HT') {\n            return 'Mi-temps'\n        } else return `${minutes}'`\n\n    }\n\n\n    return !fixture || homeScore == null || awayScore == null ? (\n        <div style={{ padding: 20, paddingTop: 0 }}>\n            <Skeleton active />\n        </div>\n    ) : (\n            <div className='fixture-line'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th><img src={fixture.homeTeam.logo} alt=\"logo\" className='team-logo' /></th>\n                            <th><small>{fixture.homeTeam.stadium}<br />{dateTransform(fixture.date).fullDate}<br />à {dateTransform(fixture.date).fullTime}</small></th>\n                            <th><img src={fixture.awayTeam.logo} alt=\"logo\" className='team-logo' /></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className='team-name'>{fixture.homeTeam.name}</td>\n                            <td className='score-fixture'>{fixture.goalsHomeTeam} - {fixture.goalsAwayTeam}</td>\n                            <td className='team-name'>{fixture.awayTeam.name}</td>\n                        </tr>\n                        {fixture.timeElapsed && <tr className='pb-1'>\n                            <td></td>\n                            <td className='fixture-status'>{statusTranform(fixture.statusShort, fixture.timeElapsed)}</td>\n                            <td></td>\n                        </tr>}\n                        <tr className='odds-section odds-top'>\n                            <td>Cote domicile :</td>\n                            <td>Cote nul :</td>\n                            <td>Cote extérieur :</td>\n                        </tr>\n                        <tr className='odds-section odds-bottom'>\n                            <td>{fixture.oddsWinHome}</td>\n                            <td>{fixture.oddsDraw}</td>\n                            <td>{fixture.oddsWinAway}</td>\n                        </tr>\n                        <tr className='prono-section'>\n                            <td className='prono-input-col'><label>Buts domicile :</label><input className='prono-input' type=\"number\" name='homeProno' value={homeScore} min={0} onChange={e => setHomeScore(e.target.value)} placeholder='Prono' disabled={matchStarted} /></td>\n                            <td className='prono-input-col'>\n                                {!saveSuccess && <>{!matchStarted && <small className='legend-save-btn'>Enregistrer prono</small>}<button className='btn my-btn save-prono' disabled={matchStarted} onClick={savePronos}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\" /></svg></button></>}\n                                {saveSuccess && <>{!matchStarted && <small className='legend-save-btn'>Prono enregistré</small>}<button className='btn my-btn save-prono saved-prono' disabled={matchStarted} onClick={savePronos}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" /></svg></button></>}\n                            </td>\n                            <td className='prono-input-col'><label>Buts extérieur :</label><input className='prono-input' type=\"number\" name='awayProno' value={awayScore} min={0} onChange={e => setAwayScore(e.target.value)} placeholder='Prono' disabled={matchStarted} /></td>\n                        </tr>\n                    </tbody>\n                </table>\n                {pronogeek.points > 0 && pronogeek.bonusFavTeam && (\n                    <div className='points-cell'>\n                        Tu as scoré <i>{pronogeek.points} pts</i><br />\n                        dont 30 pts bonus pour ton équipe de <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\" rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" /></svg>\n                    </div>\n                )}\n                {pronogeek.points > 0 && !pronogeek.bonusFavTeam && (\n                    <div className='points-cell'>\n                        Tu as scoré <i>{pronogeek.points} pts</i>\n                    </div>\n                )}\n            </div>\n        )\n}\n\nexport default Fixture\n","import React, { useState } from 'react'\nimport { Spin, Space, Form, Input, notification } from 'antd'\nimport { signup } from '../services/auth'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport axios from 'axios'\n\nconst Signup = ({ history }) => {\n    const [form] = Form.useForm()\n    const [photo, setPhoto] = useState(null)\n    const [fileName, setFileName] = useState('Charger une photo')\n    const [signupDone, setSignupDone] = useState(false)\n\n    const onFinish = async (values) => {\n        const emailCorrect = (/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(String(values.email).toLowerCase())\n        if (!emailCorrect) openNotification(`Je crois qu'il y a une faute de frappe dans ton email...`)\n        else {\n            setSignupDone(true)\n            let photoUrl = null\n            if (photo) {\n                const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, photo)\n                photoUrl = secure_url\n            }\n            await signup({ ...values, photo: photoUrl }).catch(err => {\n                openNotification(err.response.data.message.fr)\n            })\n            history.push('/login')\n            setSignupDone(false)\n        }\n    }\n\n    const uploadPhoto = e => {\n        if (e.target.files.length > 0) {\n            const file = e.target.files[0]\n            if (file.size > 1000000) return openNotification('warning', 'Attention', 'La taille du fichier ne peux pas excéder 1Mo.')\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/jpg') return openNotification('warning', 'Attention', 'La photo doit être au format JPG ou PNG.')\n            setFileName(file.name)\n            const data = new FormData()\n            data.append('file', e.target.files[0])\n            data.append('upload_preset', 'pronogeeks')\n            setPhoto(data)\n        }\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    return <div className='register-pages'>\n        {signupDone ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Enregistrement du compte...' style={{ color: ' rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: ' rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : (\n\n                <div className='row signup-form'>\n                    <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-xl-6 offset-xl-3'>\n                        <h2>Créer un compte</h2>\n                        <Form\n                            form={form}\n                            layout='vertical'\n                            name=\"basic\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                        >\n                            <Form.Item\n                                type='email'\n                                label=\"Email :\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: `L'email est nécessaire pour créer un compte.`,\n                                    },\n                                ]}\n                            >\n                                <Input style={{ borderRadius: 15.8 }} placeholder='roi.geek@pronogeeks.fr' />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Pseudo :\"\n                                name=\"username\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Le pseudo est obligatoire et doit être unique.',\n                                    },\n                                ]}\n                            >\n                                <Input style={{ borderRadius: 15.8 }} placeholder='RoiGeek' />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Mot de passe :\"\n                                name=\"password\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Tu auras besoin d\\'un mot de passe pour te connecter !',\n                                    },\n                                ]}\n                            >\n                                <Input.Password style={{ borderRadius: 15.8 }} placeholder='********' />\n                            </Form.Item>\n\n                            <label className='first-file-label signup-file-label' htmlFor=\"profile-pic-input-signup\">Photo de profil :</label>\n                            <br />\n                            <div className=\"custom-file custom-file-signup\">\n                                <label className=\"profile-image custom-file-label\" htmlFor=\"profile-pic-input-signup\">\n                                    {fileName}\n                                    <input id=\"profile-pic-input-signup\" type=\"file\" name=\"image\" className=\"custom-file-input\" onChange={uploadPhoto} />\n                                </label>\n                            </div>\n\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <button type='submit' className='btn my-btn submit-btn register-btn' style={{ marginTop: 10 }}>Créer mon compte</button>\n                            </div>\n                        </Form>\n                    </div>\n                </div>\n            )\n        }\n    </div>\n}\n\nexport default Signup\n","import React, { useContext } from 'react'\nimport { Form, Input, notification } from 'antd'\nimport { login } from '../services/auth'\nimport { Context } from '../context'\n\nconst Login = ({ history }) => {\n    const [form] = Form.useForm()\n    const { loginUser } = useContext(Context)\n\n    const onFinish = async (values) => {\n        const user = await login(values).catch(err => openNotification(err.response.data.message))\n        loginUser(user)\n        history.push('/profile')\n    }\n\n    const openNotification = message => {\n        notification.warning({\n            message: \"Error\",\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    return (\n        <div className='register-pages'>\n            <div className='row signup-form'>\n                <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4'>\n                    <h2>Se connecter</h2>\n                    <Form\n                        form={form}\n                        layout='vertical'\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                    >\n                        <Form.Item\n                            type='email'\n                            label=\"Email :\"\n                            name=\"email\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: `L'email est nécessaire pour te connecter à ton compte`,\n                                },\n                            ]}\n                        >\n                            <Input style={{ borderRadius: 15.8 }} placeholder='roi.geek@pronogeeks.fr' />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Mot de passe :\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: `N'oublie pas ton mot de passe !`,\n                                },\n                            ]}\n                        >\n                            <Input.Password style={{ borderRadius: 15.8 }} placeholder='********' />\n                        </Form.Item>\n\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <button type='submit' className='btn register-btn my-btn submit-btn'>Me connecter</button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useContext } from 'react'\nimport { Context } from '../context'\nimport { Redirect, Link } from 'react-router-dom'\n\nconst Home = () => {\n\n    const { user } = useContext(Context)\n\n    return user ? <Redirect to='/profile' /> : (\n        <div className='my-content-homepage'>\n            <div className='row'>\n                <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                    <div className='home-div'>\n                        <div>\n                            <h2>Bienvenue sur<br />\n                                <img className='logo-homepage' src='/images/logo-blue-home.png' alt='Logo' /></h2>\n                            <p className='home-message'>Mesure-toi aux maîtres geeks des pronostics de Ligue 1\n                <br />\n                et deviens expert pronogeekeur !\n                </p>\n                        </div>\n                        <div className='home-register'>\n                            <Link className='btn my-btn login-btn' to='/login'>Se connecter</Link>\n                            <Link className='btn my-btn signup-btn' to='/signup'>Créer un compte</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/user`\n\nconst userService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const getUsers = async() => {\n    const {\n        data: {\n            users\n        }\n    } = await userService.get('/users')\n    return users\n}\n\nexport const updateProfileWithSeason = async seasonID => {\n    const {\n        data: {\n            newSeason\n        }\n    } = await userService.get(`/${seasonID}`)\n    return newSeason\n}\n\nexport const updateProfileWithMatchweek = async(seasonID, matchweekNumber) => {\n    const {\n        data: {\n            matchweek\n        }\n    } = await userService.get(`/${seasonID}/${matchweekNumber}`)\n    return matchweek\n}\n\nexport const updateFavTeam = async(seasonID, favTeam) => {\n    await userService.put(`/${seasonID}/favTeam`, favTeam)\n    return true\n}\n\nexport const fetchPlayers = async(seasonID) => {\n    const {\n        data: {\n            users\n        }\n    } = await userService.get(`/players/${seasonID}`)\n    return users\n}","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { updateProfile, getProfile, updatePhoto } from '../services/auth'\nimport { fetchPlayers } from '../services/user'\nimport axios from 'axios'\nimport { Spin, Space, notification } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\n\nconst Profile = () => {\n    const { user, loginUser } = useContext(Context)\n\n    const [photoLoading, setPhotoLoading] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [usernameInput, setUsernameInput] = useState('')\n    const [usernameChanged, setUsernameChanged] = useState(false)\n    const [seasonID, setSeasonID] = useState(null)\n    const [seasonRanking, setSeasonRanking] = useState(null)\n    const [userRanking, setUserRanking] = useState(null)\n\n    const uploadPhoto = async e => {\n        const file = e.target.files[0]\n        if (file.size > 1000000) return openNotification('warning', 'Attention', 'La taille du fichier ne peux pas excéder 1Mo. La photo de profil reste inchangée.')\n        if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/jpg') return openNotification('warning', 'Attention', 'Le fichier doit être au format JPG ou PNG. La photo de profil reste inchangée.')\n        setPhotoLoading(true)\n        const data = new FormData()\n        data.append('file', e.target.files[0])\n        data.append('upload_preset', 'pronogeeks')\n        const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, data)\n        const user = await updatePhoto({ photo: secure_url })\n        loginUser(user)\n        setPhotoLoading(false)\n    }\n\n    const saveUsername = async () => {\n        let saved = true\n        setUsernameChanged(true)\n        await updateProfile({ username: usernameInput }).catch(err => {\n            setUsernameChanged(false)\n            saved = false\n            openNotification('warning', 'Attention', err.response.data.message.fr)\n        })\n        if (saved) {\n            const user = await getProfile()\n            loginUser(user)\n            setShowModal(false)\n            setUsernameChanged(false)\n        }\n    }\n\n    useEffect(() => {\n        setUsernameInput(user?.username)\n        const getPlayers = async () => {\n            if (user && user.seasons.length > 0) {\n                const seasonID = user?.seasons[user.seasons.length - 1].season._id.toString()\n                setSeasonID(user?.seasons[user.seasons.length - 1].season._id.toString())\n                const players = await fetchPlayers(seasonID)\n                const rankedPlayers = players.sort((a, b) => {\n                    return b.seasons.filter(season => season.season.toString() === seasonID)[0].totalPoints - a.seasons.filter(season => season.season.toString() === seasonID)[0].totalPoints\n                })\n                const userRanking = rankedPlayers.map(player => player.username).indexOf(user.username) + 1\n                const rankedPlayers20 = rankedPlayers.slice(0, 20)\n                setUserRanking(userRanking)\n                setSeasonRanking(rankedPlayers20)\n            }\n        }\n        getPlayers()\n    }, [user])\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    const setRank = (num) => {\n        if (parseInt(num) === 1) return '1er'\n        else return `${num}ème`\n    }\n\n    return !user || usernameChanged ? (<div className='my-profile-page'>\n        <div className='loader-container'>\n            <Space size='large'>\n                <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n            </Space>\n        </div>\n    </div>\n    ) : (\n            <div className='my-profile-page row'>\n                <div className='my-profile col-10 offset-1 col-lg-4'>\n                    <section className='about-section'>\n                        <h2>Bonjour {user.username}\n                            <button onClick={() => setShowModal(!showModal)}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg></button>\n                        </h2>\n                        <div className='profile-details'>\n                            <div className='profile-picture-container'>\n                                {!photoLoading && <img src={user.photo} alt=\"Profile pic\" className='profile-pic' />}\n                                {photoLoading && <div className='profile-pic'>\n                                    <Space size='medium'>\n                                        <Spin size='medium' tip='Chargement de la photo...' style={{ color: 'rgb(26, 145, 254)' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(26, 145, 254)', fontSize: '2rem', marginBottom: 8 }} />} />\n                                    </Space>\n                                </div>}\n                                <label className='first-file-label' htmlFor=\"profile-pic-input\">Changer de photo de profil :</label>\n                                <div className=\"custom-file\">\n                                    <label className=\"profile-image custom-file-label\" htmlFor=\"profile-pic-input\">\n                                        Charger une photo\n                            <input id=\"profile-pic-input\" type=\"file\" name=\"image\" className=\"custom-file-input\" onChange={uploadPhoto} />\n                                    </label>\n                                </div>\n                            </div>\n                            {user.seasons.length > 0 && user.seasons[user.seasons.length - 1].favTeam && <div className='favteam-info'>\n                                <div>\n                                    <img src={user.seasons[user.seasons.length - 1].favTeam.logo} alt=\"Logo équipe de coeur\" />\n                                </div>\n                                <h5>{user.seasons[user.seasons.length - 1].favTeam.name} est ton équipe de coeur<br />pour la saison {user.seasons[user.seasons.length - 1].season.year} de {user.seasons[user.seasons.length - 1].season.leagueName}.</h5>\n                            </div>}\n                        </div>\n                    </section>\n                    <section className='geekleagues-section'>\n                        <h2>Ligues Geek</h2>\n                        <Link to='/myGeekLeagues/new' className='btn my-btn new-league'>Nouvelle ligue</Link>\n                        {user.geekLeagues.length > 0 && <ul>\n                            {user.geekLeagues.map(league => <li>{league.name}</li>)}\n                        </ul>}\n                    </section>\n                </div>\n                <section className='my-profile-ranking col-10 offset-1 col-lg-4 offset-lg-2'>\n                    {!seasonRanking && <div className='pt-4'>\n                        <Space size='large'>\n                            <Spin size='large' tip='Chargement du classement...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                        </Space>\n                    </div>}\n                    {seasonRanking && <>\n                        <h2>{user.seasons[user.seasons.length - 1].season.leagueName} saison {user.seasons[user.seasons.length - 1].season.year}\n                            <br />\n                    Classement général\n                    </h2>\n                        <ul className='list-group list-group-flush season-ranking'>\n                            <li className='list-group-item d-flex justify-content-between align-items-center mb-2'><span><b>{setRank(userRanking)} : {user.username}</b></span><span className='badge badge-success badge-pill my-badge'>{user.seasons[user.seasons.length - 1].totalPoints} pts</span></li>\n                            {seasonRanking.map((player, index) => <li key={player._id} className='list-group-item d-flex justify-content-between align-items-center'><span>{setRank(index + 1)} : {player.username}</span><span className='badge badge-success badge-pill my-badge'>{player.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].totalPoints} pts</span></li>\n\n                            )}\n                        </ul>\n                    </>}\n                </section>\n                {showModal && <div id=\"update-username-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"update-username-modal-title\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">Changer de pseudo :</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setShowModal(false)}>\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <label htmlFor=\"pseudo-input-profile\">Entrer un nouveau pseudo :</label>\n                                <input type=\"text\" id='pseudo-input-profile' name='username' value={usernameInput} onChange={(e) => setUsernameInput(e.target.value)} />\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"my-btn close\" onClick={() => setShowModal(false)}>Fermer</button>\n                                <button type=\"button\" className=\" my-btn save\" onClick={saveUsername}>Enregistrer</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n}\n\nexport default Profile\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/seasons`\n\nconst seasonService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const getSeasonData = async(seasonID) => {\n    const {\n        data: {\n            season\n        }\n    } = await seasonService.get(`/${seasonID}`)\n    return season\n}\n\nexport const getMatchweekFixtures = async(seasonID, matchweekNum) => {\n    const {\n        data: {\n            fixtures\n        }\n    } = await seasonService.get(`/${seasonID}/${matchweekNum}`)\n    return fixtures\n}\n\nexport const getSeasonTeams = async(seasonID) => {\n    const {\n        data: {\n            teams\n        }\n    } = await seasonService.get(`/teams/${seasonID}`)\n    return teams\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { getSeasonData } from '../services/seasons'\nimport { updateProfileWithSeason, updateFavTeam } from '../services/user'\nimport { getProfile } from '../services/auth'\nimport { Space, Spin, notification } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\nimport { useInput } from '../customHooks'\n\nconst PronogeeksSearch = ({ match: { params: { seasonID } } }) => {\n\n    const { loginUser, user } = useContext(Context)\n\n    const [seasonTeams, setSeasonTeams] = useState(null)\n    const [newSeason, setNewSeason] = useState(false)\n    const [matchweek, setMatchweek] = useState(null)\n    const favTeam = useInput('')\n\n    useEffect(() => {\n        const updateProfile = async (seasonID) => {\n            return await updateProfileWithSeason(seasonID)\n        }\n        const setNewUser = async () => {\n            const newSeason = await updateProfile(seasonID)\n            setNewSeason(newSeason)\n            const user = await getProfile()\n            loginUser(user)\n        }\n        setNewUser()\n\n        const fetchSeason = async (seasonID) => {\n            const season = await getSeasonData(seasonID)\n            setSeasonTeams(season.rankedTeams)\n            const fixturesToCome = season.fixtures.filter(fixture => (new Date(fixture.date).getTime() - Date.now()) > 0 - 1000 * 60 * 120)\n            let nextMatchweek = fixturesToCome[0].matchweek;\n            let nextDate = fixturesToCome[0].date\n            fixturesToCome.forEach(fixture => nextMatchweek = fixture.matchweek < nextMatchweek && new Date(fixture.date).getTime() < new Date(nextDate).getTime() ? fixture.matchweek : nextMatchweek)\n            setMatchweek(nextMatchweek)\n        }\n        fetchSeason(seasonID)\n\n    }, [seasonID, loginUser])\n\n    const saveFavTeam = async () => {\n        if (favTeam.value === '') return openNotification('warning', 'Attention', 'Tu dois choisir une équipe de coeur avant de continuer.')\n        else {\n            await updateFavTeam(seasonID, { favTeam: favTeam.value })\n            openNotification('success', 'Équipe de coeur enregistrée.')\n            const user = await getProfile()\n            loginUser(user)\n            setNewSeason(false)\n        }\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    return <div className='pronogeeks-bg'>\n        {\n            !seasonTeams ? (\n                <div className='loader-container'>\n                    <Space size='large'>\n                        <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                    </Space>\n                </div>\n            ) : newSeason ? (\n                <div className='loader-container'>\n                    <div className='choose-favteam'>\n                        <label htmlFor=\"favteam-select\">Choisis une équipe de coeur pour cette saison.\n                            <br />\n                            NB : Chaque bon prono sur un match de ton équipe de coeur te rapporte un bonus de 30 pts.\n                            <br />\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\" /></svg> Réfléchis bien, tu ne pourras plus changer ensuite...\n                        </label>\n                        <br />\n                        <select name=\"favTeam\" id=\"favteam-select\" {...favTeam} >\n                            <option value=\"\" disabled>Sélectionner une équipe</option>\n                            {seasonTeams.map(team =>\n                                <option key={team._id} value={team._id}>{team.name}</option>\n                            )}\n                        </select>\n                        <br />\n                        <button className='btn my-btn save-favteam-btn' onClick={saveFavTeam}>Confirmer</button>\n                    </div>\n                </div>\n            ) : !matchweek ? (\n                <div className='loader-container'>\n                    <Space size='large'>\n                        <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                    </Space>\n                </div>\n            ) : !user ? (\n                <Redirect to='/login' />\n            ) : (\n                                <Redirect to={`/pronogeeks/${seasonID}/matchweek/${matchweek}`} />\n                            )\n        }\n    </div>\n}\n\nexport default PronogeeksSearch\n","import {\n    useState\n} from 'react'\n\nexport const useInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue)\n    const onChange = e => setValue(e.target.value)\n    return {\n        value,\n        onChange\n    }\n}","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/fetch`\n\nconst apiFootballService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const updateFixturesStatus = async(seasonID, matchweekNum) => {\n    const {\n        data\n    } = await apiFootballService.get(`/fixtures/season/${seasonID}/matchweek/${matchweekNum}`)\n    return data\n}\n\nexport const updateOdds = async(seasonID, matchweekNum) => {\n    const {\n        data: {\n            message\n        }\n    } = await apiFootballService.get(`/odds/season/${seasonID}/matchweek/${matchweekNum}`)\n    return message\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { getMatchweekFixtures, getSeasonData } from '../services/seasons'\nimport { updateProfileWithMatchweek, updateProfileWithSeason } from '../services/user'\nimport { updateFixturesStatus, updateOdds } from '../services/apiFootball'\nimport { getProfile } from '../services/auth'\nimport { Fixture } from '../components'\nimport { Spin, Space, notification } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\n\nconst Pronogeeks = ({ match: { params: { matchweekNumber, seasonID } }, history }) => {\n    const [season, setSeason] = useState(null)\n    const [fixtures, setFixtures] = useState(null)\n    const [matchweekPoints, setMatchweekPoints] = useState(null)\n    const [matchweekBonus, setMatchweekBonus] = useState(null)\n    const [matchweekCorrects, setMatchweekCorrects] = useState(null)\n\n    const { loginUser, user } = useContext(Context)\n\n    useEffect(() => {\n        const updateProfile = async (season, matchweek) => {\n            await updateProfileWithSeason(season)\n            await updateProfileWithMatchweek(season, matchweek)\n        }\n        const setNewUser = async () => {\n            await updateProfile(seasonID, matchweekNumber)\n            const user = await getProfile()\n            loginUser(user)\n            const seasonUser = user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0]\n            const matchweekUser = seasonUser.matchweeks.filter(matchweek => matchweek.number.toString() === matchweekNumber.toString())[0]\n            setMatchweekPoints(matchweekUser.totalPoints)\n            setMatchweekBonus(matchweekUser.bonusPoints)\n            setMatchweekCorrects(matchweekUser.numberCorrects)\n        }\n        setNewUser()\n\n        const fetchSeason = async seasonID => {\n            const season = await getSeasonData(seasonID)\n            setSeason(season)\n        }\n        fetchSeason(seasonID)\n\n        fetchFixtures(seasonID, matchweekNumber)\n\n    }, [matchweekNumber, seasonID])\n\n    const fetchStatus = async () => {\n        const data = await updateFixturesStatus(seasonID, matchweekNumber)\n        if (data.message) return openNotification('warning', 'Actualisation abortée', data.message.fr)\n        else {\n            setFixtures(null)\n            setFixtures(fixtures)\n            openNotification('success', 'Scores actualisés')\n            const user = await getProfile()\n            loginUser(user)\n        }\n    }\n\n    const fetchOdds = async () => {\n        const message = await updateOdds(seasonID, matchweekNumber)\n        if (message) return openNotification('warning', 'Actualisation abortée', message.fr)\n        else {\n            const updated = fetchFixtures(seasonID, matchweekNumber)\n            if (updated) {\n                openNotification('success', 'Cotes actualisées')\n            }\n        }\n    }\n\n    const fetchFixtures = async (season, matchweek) => {\n        const fixtures = await getMatchweekFixtures(season, matchweek)\n        fixtures.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n        setFixtures(null)\n        setFixtures(fixtures)\n        return true\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    const previousPage = () => {\n        setFixtures(null)\n        history.push(`/pronogeeks/${seasonID}/matchweek/${parseInt(matchweekNumber) - 1}`)\n    }\n\n    const nextPage = () => {\n        setFixtures(null)\n        history.push(`/pronogeeks/${seasonID}/matchweek/${parseInt(matchweekNumber) + 1}`)\n    }\n\n    return !fixtures || !season ? (\n        <div className='pronogeeks-bg'>\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        </div>\n    ) : !user ? (\n        <Redirect to='/login' />\n    ) : (\n                <div className='pronogeeks-bg matchweek-page'>\n                    {user.role === 'SUPER GEEK' && <div>\n                        <button className='btn my-btn admin-btn top' onClick={fetchStatus}>Actualiser les scores</button>\n                        <button className='btn my-btn admin-btn top' onClick={fetchOdds}>Actualiser les cotes</button>\n                    </div>}\n                    <h2>{season.leagueName} saison {season.year} :<br />\n                    journée {matchweekNumber}</h2>\n                    <ul className=\"list-group list-group-flush list-fixtures col-10 offset-1 col-md-8 offset-md-2 col-xl-6 offset-xl-3\">\n                        <div className='previous-next-btns'>\n\n                            {parseInt(matchweekNumber) !== 1 && <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>}\n\n                            {matchweekBonus > 0 && <div className='score-top'>Ton total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                            {!matchweekBonus && <div className='score-top'>Ton total J{matchweekNumber} : {matchweekPoints} pts</div>}\n\n                            {parseInt(matchweekNumber) !== 38 && <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>}\n\n                        </div>\n                        <div className='list-fixtures-header'>\n                            <div className='header-title'>Domicile</div>\n                            <div>|</div>\n                            <div className='header-title'>Extérieur</div>\n                        </div>\n                        {fixtures.map(fixture => (\n                            <li className=\"list-group-item\" key={fixture._id} style={{ background: 'none' }}>\n                                <Fixture fixtureID={fixture._id} />\n                            </li>\n                        ))}\n                        <div className='previous-next-btns'>\n                            <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>\n                            {matchweekBonus > 0 && <div className='score-bottom'>Ton total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                            {!matchweekBonus && <div className='score-bottom'>Ton total J{matchweekNumber} : {matchweekPoints} pts</div>}\n                            <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>\n                        </div>\n                    </ul>\n                    {user.role === 'SUPER GEEK' && <div>\n                        <button className='btn my-btn admin-btn' onClick={fetchStatus}>Actualiser les scores</button>\n                        <button className='btn my-btn admin-btn' onClick={fetchOdds}>Actualiser les cotes</button>\n                    </div>}\n                </div>\n\n            )\n}\n\nexport default Pronogeeks\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/geekLeagues`\n\nconst geekLeagueService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const createLeague = async values => {\n    const {\n        data: {\n            geekLeague\n        }\n    } = await geekLeagueService.post('/', values)\n    return geekLeague\n}","import React, { useEffect, useState, useContext } from 'react'\nimport { Spin, Space, Form, Input, notification, Select } from 'antd'\nimport { createLeague } from '../services/geekLeague'\nimport { getUsers } from '../services/user'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\n\nconst { Option } = Select\n\nconst NewGeekLeague = ({ history }) => {\n    const { user } = useContext(Context)\n    const [form] = Form.useForm()\n    const [users, setUsers] = useState(null)\n    const [creating, setCreating] = useState(false)\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            const allUsers = await getUsers()\n            const users = allUsers.filter(oneUser => oneUser._id !== user?._id)\n            setUsers(users)\n        }\n        fetchUsers()\n    }, [user])\n\n    const newLeague = async (values) => {\n        if (!values.name || !values.geeks || values.geeks.length < 1) return openNotification('warning', 'Attention', 'Tous les champs sont requis.')\n        setCreating(true)\n        const geekLeague = await createLeague(values)\n        openNotification('success', `Ligue \"${values.name}\" créée`)\n        history.push(`/myGeekLeagues/${geekLeague._id}`)\n        setCreating(false)\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight'\n        })\n    }\n\n    return <div className='geekleague-bg row'>\n        {!user || creating ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : (\n                <div className='geekleague-form'>\n                    <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-xl-6 offset-xl-3'>\n                        <h2>Créer une ligue</h2>\n                        <Form\n                            form={form}\n                            layout='vertical'\n                            name=\"basic\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={newLeague}\n                        >\n                            <Form.Item\n                                type='text'\n                                label=\"Nom de la ligue :\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: `Le nom de ligue est nécessaire.`,\n                                    },\n                                ]}\n                            >\n                                <Input style={{ borderRadius: 15.8 }} placeholder='Ma Ligue Geek' />\n                            </Form.Item>\n                            <Form.Item\n                                type='text'\n                                label=\"Sélectionne d'autres geeks :\"\n                                name=\"geeks\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: `Tu ne peux pas créer de ligue sans autres geeks.`,\n                                    },\n                                ]}\n                            >\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: '100%', borderRadius: 15.8, overflow: 'hidden', textAlign: 'left' }}\n                                    placeholder=\"Ajoute des geeks à ta ligue !\"\n                                    optionLabelProp=\"label\"\n                                    optionFilterProp='label'\n                                >\n                                    {users?.map(user => <Option key={user._id} value={user._id} label={user.username}>\n                                        <div className=\"demo-option-label-item\">\n                                            <span role=\"img\" aria-label={user.username}>\n                                                <img src={user.photo} alt=\"profile\" className='profile-pic-preview' />\n                                            </span>\n                                        &nbsp;&nbsp;{user.username}\n                                        </div>\n                                    </Option>)}\n                                </Select>\n                            </Form.Item>\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <button type='submit' className='btn my-btn create-league-btn' style={{ marginTop: 10 }}>Créer ligue</button>\n                            </div>\n                        </Form>\n                    </div>\n                </div>\n            )\n        }\n    </div>\n}\n\nexport default NewGeekLeague","import React from 'react'\n\nconst GeekLeague = ({ match: { params: { geekLeagueID } } }) => {\n    return (\n        <div className='geekleague-bg row'>\n            <h2>{geekLeagueID}</h2>\n        </div>\n    )\n}\n\nexport default GeekLeague\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { AppLayout } from './components'\nimport { Login, Signup, Home, Profile, PronogeeksSearch, Pronogeeks, NewGeekLeague, GeekLeague } from './pages'\n\nconst ProvRanking = () => <h1>Provisional Ranking</h1>\nconst NotFound = () => <h2>Cette page n'existe pas...<br />Retourne faire tes pronos au lieu de papilloner !</h2>\n\nconst router = () => {\n    return <Router>\n        <AppLayout>\n            <Switch>\n                <Route component={Home} path='/' exact />\n                <Route component={Signup} path='/signup' />\n                <Route component={Login} path='/login' />\n                <Route component={Profile} path='/profile' exact />\n                <Route component={ProvRanking} path='/profile/provRanking' />\n                <Route component={PronogeeksSearch} path='/pronogeeks/:seasonID' exact />\n                <Route component={Pronogeeks} path='/pronogeeks/:seasonID/matchweek/:matchweekNumber' />\n                <Route component={NewGeekLeague} path='/myGeekleagues/new' exact />\n                <Route component={GeekLeague} path='/myGeekleagues/:geekLeagueID' />\n                <Route component={NotFound} />\n            </Switch>\n        </AppLayout>\n    </Router>\n}\n\nexport default router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport Router from './router';\nimport CtxProvider from './context'\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<CtxProvider>\n  <Router />\n</CtxProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}