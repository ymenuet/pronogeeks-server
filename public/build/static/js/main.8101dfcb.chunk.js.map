{"version":3,"sources":["services/auth.js","context/index.js","components/AppLayout.js","services/fixtures.js","services/pronogeeks.js","components/Fixture.js","services/user.js","components/FixtureOther.js","pages/Signup.js","pages/Login.js","pages/Home.js","pages/Profile.js","services/seasons.js","pages/PronogeeksSearch.js","customHooks/index.js","services/apiFootball.js","pages/Pronogeeks.js","services/geekLeague.js","pages/NewGeekLeague.js","pages/GeekLeague.js","pages/GeekLeagues.js","pages/GeekLeagueDetail.js","pages/PronogeeksOther.js","helpers/PrivateRoute.js","router.js","serviceWorker.js","index.js"],"names":["authService","axios","create","baseURL","withCredentials","signup","user","a","post","login","userData","getProfile","updateProfile","put","updatePhoto","get","data","logout","Context","createContext","CtxProvider","children","useState","setUser","useEffect","loginUser","getSession","Provider","value","logoutUser","AppLayout","useContext","history","useHistory","logoutButton","push","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","src","photo","alt","width","height","viewBox","fill","xmlns","fillRule","d","fixtureService","getFixture","fixtureID","fixture","pronogeekService","savePronogeeks","homeScore","awayScore","pronogeekExists","pronogeek","homeProno","awayProno","_id","Fixture","setFixture","setPronogeek","matchStarted","setMatchStarted","setHomeScore","setAwayScore","saveSuccess","setSaveSuccess","seasonID","season","matchweekNumber","matchweek","Date","date","now","seasons","filter","length","pronogeekFound","matchweekIndex","matchweeks","forEach","i","number","toString","pronogeeks","fetchFixturesAndOdds","statusShort","minutes","savePronos","getTime","openNotification","parseInt","homeTeam","name","awayTeam","error","catch","err","response","message","fr","setTimeout","title","notification","description","placement","dateTransform","weekDay","getDay","month","getMonth","getMinutes","fullDate","getDate","getFullYear","fullTime","getHours","logo","stadium","goalsHomeTeam","goalsAwayTeam","timeElapsed","oddsWinHome","oddsDraw","oddsWinAway","min","onChange","e","target","placeholder","disabled","points","bonusFavTeam","exact","potentialPoints","addedToProfile","style","padding","paddingTop","active","userService","getUsers","users","getUser","userID","updateProfileWithSeason","newSeason","updateProfileWithMatchweek","updateFavTeam","favTeam","fetchPlayers","geekID","fetchUser","margin","username","Signup","Form","useForm","form","setPhoto","fileName","setFileName","signupDone","setSignupDone","onFinish","values","test","String","email","toLowerCase","photoUrl","process","secure_url","size","tip","color","fontSize","indicator","LoadingOutlined","spin","marginBottom","layout","initialValues","remember","Item","label","rules","required","borderRadius","Password","htmlFor","files","file","FormData","append","display","justifyContent","marginTop","href","Login","warning","Home","Profile","loading","photoLoading","setPhotoLoading","showModal","setShowModal","usernameInput","setUsernameInput","usernameChanged","setUsernameChanged","setSeasonID","seasonRankingFull","setSeasonRankingFull","seasonRanking","setSeasonRanking","userRanking","setUserRanking","uploadPhoto","saveUsername","saved","players","rankedPlayers","sort","b","totalPoints","map","player","indexOf","rankedPlayers20","slice","getPlayers","setRank","num","year","leagueName","geekLeagues","league","key","result","geeks","geek","index","seas","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","seasonService","getSeasonData","getSeasons","getMatchweekFixtures","matchweekNum","fixtures","PronogeeksSearch","match","params","seasonTeams","setSeasonTeams","setNewSeason","setMatchweek","initialValue","setValue","useInput","setNewUser","rankedTeams","fixturesToCome","nextMatchweek","nextDate","fetchSeason","saveFavTeam","team","apiFootballService","updateFixturesStatus","updateOdds","Pronogeeks","setSeason","setFixtures","matchweekPoints","setMatchweekPoints","matchweekBonus","setMatchweekBonus","matchweekCorrects","setMatchweekCorrects","showRules","setShowRules","scoresUpdated","setScoresUpdated","oddsUpdated","setOddsUpdated","lastOddsUpdated","setLastOddsUpdated","lastScoresUpdated","setLastScoresUpdated","setPoints","matchweekUser","bonusPoints","numberCorrects","getStatus","getOdds","fetchFixtures","fetchStatus","fetchOdds","fixtureDates","minDate","Math","maxDate","max","fixturesInLessThanOneWeek","fixtureUpdates","lastScoreUpdate","lastUpdate","fixturesOverForLessThanTwoDays","fixturesUpdatedMoreThanThirtyMinutesAgo","fixtureOddsUpdates","lastOddsUpdate","allFixturesStarted","oddsUpdatedMoreThanOneDayAgo","previousPage","nextPage","background","geekLeagueService","createLeague","geekLeague","fetchLeague","leagueID","fetchMatchweekRanking","geekLeagueID","getUserLeagues","editGeekLeague","outGeekLeague","deleteGeekLeague","delete","Option","Select","NewGeekLeague","setUsers","creating","setCreating","allUsers","oneUser","fetchUsers","newLeague","mode","overflow","textAlign","optionLabelProp","optionFilterProp","GeekLeague","setGeekLeague","setSeasons","showDelete","setShowDelete","showOut","setShowOut","getLeague","getAllSeasons","editLeague","deleteLeague","outLeague","creator","outline","GeekLeagues","setGeekLeagues","fetchUserLeagues","createdAt","GeekLeagueDetail","lastMatchweek","setLastMatchweek","ranking","setRanking","lastFixtures","setNextMatchweek","getGeekLeague","updateRanking","oneMatchweek","matchweekStarted","setMatchweekStarted","noPronogeeks","setNoPronogeeks","FixtureOther","PrivateRoute","Component","component","rest","render","props","pathname","state","from","location","NotFound","router","path","PronogeeksOther","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.8101dfcb.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/auth` :\n    `${process.env.REACT_APP_BACKENDPOINT}/auth`\n\nconst authService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const signup = async user => {\n    await authService.post('/signup', user)\n    return true\n}\n\nexport const login = async userData => {\n    await authService.post('/login', userData)\n    return getProfile()\n}\n\nexport const facebookLogin = async() => {\n    return await authService.get('/facebook')\n}\n\nexport const googleLogin = async() => {\n    return await authService.get('/facebook')\n}\n\nexport const updateProfile = async(userData) => {\n    await authService.put('/edit', userData)\n    return getProfile()\n}\n\nexport const updatePhoto = async(userData) => {\n    await authService.put('/editPic', userData)\n    return getProfile()\n}\n\nexport const getProfile = async() => {\n    const {\n        data: {\n            user\n        }\n    } = await authService.get('/profile')\n    return user\n}\n\nexport const logout = async() => {\n    const {\n        data\n    } = await authService.get('/logout')\n    return data\n}","import React, { useState, useEffect, createContext } from 'react'\nimport { getProfile } from '../services/auth'\n\nexport const Context = createContext()\n\nconst CtxProvider = ({ children }) => {\n\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        const getSession = async () => {\n            const user = await getProfile()\n            loginUser(user)\n        }\n        getSession()\n    }, [])\n\n    const loginUser = user => setUser(user)\n\n    const logoutUser = () => setUser(null)\n\n    return (\n        <Context.Provider\n            value={{\n                user,\n                loginUser,\n                logoutUser\n            }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default CtxProvider\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { Context } from '../context'\nimport { logout } from '../services/auth'\n\nconst AppLayout = ({ children }) => {\n    const { user, logoutUser } = useContext(Context)\n    const history = useHistory()\n\n    const logoutButton = async () => {\n        await logout()\n        logoutUser()\n        history.push('/')\n    }\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark my-navbar\">\n                <Link className=\"navbar-brand my-brand\" to='/'><h1>pronogeeks</h1></Link>\n                <button className=\"navbar-toggler my-navbar-btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#my-navbar-toggle\" aria-controls=\"my-navbar-toggle\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\" /></button>\n\n                <div className=\"collapse navbar-collapse\" id=\"my-navbar-toggle\">\n                    <ul className=\"navbar-nav mt-2 mt-lg-0\">\n                        {user ? (\n                            <>\n                                <li className=\"nav-item\">\n                                    <button className=\"nav-link logout-btn\" onClick={logoutButton}>Déconnexion</button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to='/myGeekLeagues'>Mes ligues Geek</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to='/pronogeeks/5f67f525d7b14148997ee3eb'>Mes pronogeeks</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/profile\"><img className='profile-pic-navbar' src={user.photo} alt='Profile' /></Link>\n                                </li>\n                            </>\n                        ) : (\n                                <>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to=\"/login\">Se connecter</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to=\"/signup\">Créer un compte</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to=\"/\"><svg width=\"1.6em\" height=\"1.6em\" viewBox=\"0 0 16 16\" className=\"bi bi-house-fill my-home-icon\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\" d=\"M8 3.293l6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\" />\n                                            <path fillRule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\" />\n                                        </svg> <span className=\"sr-only\">(current)</span></Link>\n                                    </li>\n                                </>\n                            )}\n                    </ul>\n                </div>\n            </nav>\n            <div className='my-content'>\n                {children}\n            </div>\n        </>\n    )\n}\n\nexport default AppLayout\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fixtures` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/fixtures`\n\nconst fixtureService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const getFixture = async fixtureID => {\n    const {\n        data: {\n            fixture\n        }\n    } = await fixtureService.get(`/${fixtureID}`)\n    return fixture\n}","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/pronogeeks` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/pronogeeks`\n\nconst pronogeekService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const savePronogeeks = async(homeScore, awayScore, fixtureID) => {\n    const {\n        data: {\n            pronogeek: pronogeekExists\n        }\n    } = await pronogeekService.get(`/${fixtureID}`)\n    if (!pronogeekExists) {\n        const {\n            data: {\n                pronogeek\n            }\n        } = await pronogeekService.post(`/${fixtureID}`, {\n            homeProno: homeScore,\n            awayProno: awayScore\n        })\n        return pronogeek\n    } else {\n        const {\n            data: {\n                pronogeek\n            }\n        } = await pronogeekService.put(`/${pronogeekExists._id}`, {\n            homeProno: homeScore,\n            awayProno: awayScore\n        })\n        return pronogeek\n    }\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { getFixture } from '../services/fixtures'\nimport { savePronogeeks } from '../services/pronogeeks'\nimport { Skeleton, notification } from 'antd'\nimport { Context } from '../context'\n\nconst Fixture = ({ fixtureID }) => {\n    const [fixture, setFixture] = useState(null)\n    const [pronogeek, setPronogeek] = useState(null)\n    const [matchStarted, setMatchStarted] = useState(false)\n    const [homeScore, setHomeScore] = useState(null)\n    const [awayScore, setAwayScore] = useState(null)\n    const [saveSuccess, setSaveSuccess] = useState(false)\n    const { user } = useContext(Context)\n\n    useEffect(() => {\n        const fetchFixturesAndOdds = async (fixtureID) => {\n            const fixture = await getFixture(fixtureID)\n            const seasonID = fixture.season\n            const matchweekNumber = fixture.matchweek\n            if (new Date(fixture.date) - Date.now() < 0) setMatchStarted(true)\n            setFixture(fixture)\n            let season = user.seasons.filter(season => season.season._id === seasonID)\n            if (season.length > 0) season = season[0]\n            let pronogeek = { homeProno: '', awayProno: '' };\n            let pronogeekFound = [];\n            let matchweekIndex = 0;\n            if (season.matchweeks.length > 0) {\n                season.matchweeks.forEach((matchweek, i) => {\n                    if (matchweek.number.toString() === matchweekNumber.toString()) matchweekIndex = i\n                })\n                if (season.matchweeks[matchweekIndex].pronogeeks.length > 0) pronogeekFound = season.matchweeks[matchweekIndex].pronogeeks.filter(pronogeek => pronogeek.fixture === fixtureID)\n            }\n            if (pronogeekFound.length > 0) pronogeek = pronogeekFound[0]\n            setPronogeek(pronogeek)\n            setHomeScore(pronogeek.homeProno)\n            setAwayScore(pronogeek.awayProno)\n        }\n        fetchFixturesAndOdds(fixtureID)\n    }, [fixtureID, user.seasons])\n\n    const savePronos = async () => {\n\n        // Error message if someone takes out the \"disabled\" property of a passed game to change their pronostics\n        if (new Date(fixture.date).getTime() - Date.now() < 0) return openNotification('error', 'Erreur', 'Ce match est déjà commencé ou fini. Tu ne peux plus changer ton prono.')\n\n        // Warning message if one of the inputs doesn't have a number\n        if ((!homeScore && parseInt(homeScore) !== 0) || (!awayScore && parseInt(awayScore) !== 0)) return openNotification('warning', 'Attention', `Tu n'as pas défini de score pour le match ${fixture.homeTeam.name} - ${fixture.awayTeam.name}. Prono non enregistré.`)\n\n        let error = false\n        await savePronogeeks(homeScore, awayScore, fixtureID).catch(err => {\n            openNotification('warning', 'Attention', err.response.data.message.fr)\n            error = true\n        })\n        if (!error) {\n            openNotification('success', 'Enregistré', `Pronogeek enregistré pour ${fixture.homeTeam.name} - ${fixture.awayTeam.name}`)\n            setSaveSuccess(true)\n            setTimeout(() => setSaveSuccess(false), 3000)\n        }\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    const dateTransform = (date) => {\n        date = new Date(date)\n        let weekDay = date.getDay()\n        let month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n        let minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes()\n        switch (weekDay) {\n            case 0:\n                weekDay = 'dimanche'\n                break\n            case 1:\n                weekDay = 'lundi'\n                break;\n            case 2:\n                weekDay = 'mardi'\n                break;\n            case 3:\n                weekDay = 'mercredi'\n                break\n            case 4:\n                weekDay = 'jeudi'\n                break;\n            case 5:\n                weekDay = 'vendredi'\n                break;\n            case 6:\n                weekDay = 'samedi'\n                break;\n            default:\n                weekDay = ''\n        }\n        return { fullDate: `${weekDay} ${date.getDate()}/${month}/${date.getFullYear()}`, fullTime: `${date.getHours()}h${minutes}` }\n    }\n\n    const statusTranform = (statusShort, minutes) => {\n        if (statusShort !== 'TBD' &&\n            statusShort !== 'NS' &&\n            statusShort !== '1H' &&\n            statusShort !== 'HT' &&\n            statusShort !== '2H' &&\n            statusShort !== 'ET' &&\n            statusShort !== 'P' &&\n            statusShort !== 'BT' &&\n            statusShort !== 'SUSP' &&\n            statusShort !== 'INT' &&\n            statusShort !== 'PST') {\n            return 'Match terminé'\n        } else if (statusShort === 'HT') {\n            return 'Mi-temps'\n        } else return `${minutes}'`\n\n    }\n\n\n    return !fixture || homeScore == null || awayScore == null ? (\n        <div style={{ padding: 20, paddingTop: 0 }}>\n            <Skeleton active />\n        </div>\n    ) : (\n            <div className='fixture-line'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th><img src={fixture.homeTeam.logo} alt=\"logo\" className='team-logo' /></th>\n                            <th><small>{fixture.homeTeam.stadium}<br />{dateTransform(fixture.date).fullDate}<br />à {dateTransform(fixture.date).fullTime}</small></th>\n                            <th><img src={fixture.awayTeam.logo} alt=\"logo\" className='team-logo' /></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className='score-teams-row'>\n                            <td className='team-name'>{fixture.homeTeam.name}</td>\n                            <td className='score-fixture'>{fixture.goalsHomeTeam} - {fixture.goalsAwayTeam}</td>\n                            <td className='team-name'>{fixture.awayTeam.name}</td>\n                        </tr>\n                        {fixture.timeElapsed && <tr className='pb-1'>\n                            <td></td>\n                            <td className='fixture-status'>{statusTranform(fixture.statusShort, fixture.timeElapsed)}</td>\n                            <td></td>\n                        </tr>}\n                        <tr className='odds-section odds-top'>\n                            <td>Cote domicile :</td>\n                            <td>Cote nul :</td>\n                            <td>Cote extérieur :</td>\n                        </tr>\n                        <tr className='odds-section odds-bottom'>\n                            <td>{fixture.oddsWinHome}</td>\n                            <td>{fixture.oddsDraw}</td>\n                            <td>{fixture.oddsWinAway}</td>\n                        </tr>\n                        <tr className='prono-section'>\n                            <td className='prono-input-col'><label>Buts domicile :</label><input className='prono-input' type=\"number\" name='homeProno' value={homeScore} min={0} onChange={e => setHomeScore(e.target.value)} placeholder='Prono' disabled={matchStarted} /></td>\n                            <td className='prono-input-col'>\n                                {!saveSuccess && <>{!matchStarted && <small className='legend-save-btn'>Enregistrer prono</small>}<button className='btn my-btn save-prono' disabled={matchStarted} onClick={savePronos}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\" /></svg></button></>}\n                                {saveSuccess && <>{!matchStarted && <small className='legend-save-btn'>Prono enregistré</small>}<button className='btn my-btn save-prono saved-prono' disabled={matchStarted} onClick={savePronos}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" /></svg></button></>}\n                            </td>\n                            <td className='prono-input-col'><label>Buts extérieur :</label><input className='prono-input' type=\"number\" name='awayProno' value={awayScore} min={0} onChange={e => setAwayScore(e.target.value)} placeholder='Prono' disabled={matchStarted} /></td>\n                        </tr>\n                    </tbody>\n                </table>\n                {pronogeek.points > 0 && pronogeek.bonusFavTeam && (\n                    <div className='points-cell'>\n                        Tu as scoré <i>{pronogeek.points}pts</i> {pronogeek.exact && `(${pronogeek.potentialPoints}*2)`}<br />\n                        dont 30 pts bonus pour ton équipe de <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\" rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" /></svg>\n                    </div>\n                )}\n                {pronogeek.points > 0 && !pronogeek.bonusFavTeam && (\n                    <div className='points-cell'>\n                        Tu as scoré <i>{pronogeek.points}pts</i> {pronogeek.exact && `(${pronogeek.potentialPoints}*2)`}\n                    </div>\n                )}\n                {pronogeek.points === 0 && pronogeek.addedToProfile && (\n                    <div className='points-cell'>\n                        Dommage, mauvais prono...\n                    </div>\n                )}\n            </div>\n        )\n}\n\nexport default Fixture\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/user` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/user`\n\nconst userService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const getUsers = async() => {\n    const {\n        data: {\n            users\n        }\n    } = await userService.get('/users')\n    return users\n}\n\nexport const getUser = async(userID) => {\n    const {\n        data: {\n            user\n        }\n    } = await userService.get(`/geek/${userID}`)\n    return user\n}\n\nexport const updateProfileWithSeason = async seasonID => {\n    const {\n        data: {\n            newSeason\n        }\n    } = await userService.get(`/${seasonID}`)\n    return newSeason\n}\n\nexport const updateProfileWithMatchweek = async(seasonID, matchweekNumber) => {\n    const {\n        data: {\n            matchweek\n        }\n    } = await userService.get(`/${seasonID}/${matchweekNumber}`)\n    return matchweek\n}\n\nexport const updateFavTeam = async(seasonID, favTeam) => {\n    await userService.put(`/${seasonID}/favTeam`, favTeam)\n    return true\n}\n\nexport const fetchPlayers = async(seasonID) => {\n    const {\n        data: {\n            users\n        }\n    } = await userService.get(`/players/${seasonID}`)\n    return users\n}","import React, { useState, useEffect } from 'react'\nimport { getFixture } from '../services/fixtures'\nimport { getUser } from '../services/user'\nimport { Skeleton } from 'antd'\n\nconst Fixture = ({ fixtureID, geekID }) => {\n    const [fixture, setFixture] = useState(null)\n    const [pronogeek, setPronogeek] = useState(null)\n    const [matchStarted, setMatchStarted] = useState(false)\n    const [homeScore, setHomeScore] = useState(null)\n    const [awayScore, setAwayScore] = useState(null)\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const user = await getUser(geekID)\n            setUser(user)\n        }\n        fetchUser()\n    }, [geekID])\n\n    useEffect(() => {\n        if (user && user.seasons.length > 0) {\n            const fetchFixturesAndOdds = async (fixtureID) => {\n                const fixture = await getFixture(fixtureID)\n                const seasonID = fixture.season\n                const matchweekNumber = fixture.matchweek\n                if (new Date(fixture.date) - Date.now() < 0) setMatchStarted(true)\n                setFixture(fixture)\n                let season = user.seasons.filter(season => season.season._id === seasonID)\n                if (season.length > 0) season = season[0]\n                let pronogeek = { homeProno: '', awayProno: '' };\n                let pronogeekFound = [];\n                let matchweekIndex = 0;\n                if (season.matchweeks.length > 0) {\n                    season.matchweeks.forEach((matchweek, i) => {\n                        if (matchweek.number.toString() === matchweekNumber.toString()) matchweekIndex = i\n                    })\n                    if (season.matchweeks[matchweekIndex].pronogeeks.length > 0) pronogeekFound = season.matchweeks[matchweekIndex].pronogeeks.filter(pronogeek => pronogeek.fixture === fixtureID)\n                }\n                if (pronogeekFound.length > 0) pronogeek = pronogeekFound[0]\n                setPronogeek(pronogeek)\n                setHomeScore(pronogeek.homeProno)\n                setAwayScore(pronogeek.awayProno)\n            }\n            fetchFixturesAndOdds(fixtureID)\n        }\n    }, [fixtureID, user])\n\n    const dateTransform = (date) => {\n        date = new Date(date)\n        let weekDay = date.getDay()\n        let month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n        let minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes()\n        switch (weekDay) {\n            case 0:\n                weekDay = 'dimanche'\n                break\n            case 1:\n                weekDay = 'lundi'\n                break;\n            case 2:\n                weekDay = 'mardi'\n                break;\n            case 3:\n                weekDay = 'mercredi'\n                break\n            case 4:\n                weekDay = 'jeudi'\n                break;\n            case 5:\n                weekDay = 'vendredi'\n                break;\n            case 6:\n                weekDay = 'samedi'\n                break;\n            default:\n                weekDay = ''\n        }\n        return { fullDate: `${weekDay} ${date.getDate()}/${month}/${date.getFullYear()}`, fullTime: `${date.getHours()}h${minutes}` }\n    }\n\n    const statusTranform = (statusShort, minutes) => {\n        if (statusShort !== 'TBD' &&\n            statusShort !== 'NS' &&\n            statusShort !== '1H' &&\n            statusShort !== 'HT' &&\n            statusShort !== '2H' &&\n            statusShort !== 'ET' &&\n            statusShort !== 'P' &&\n            statusShort !== 'BT' &&\n            statusShort !== 'SUSP' &&\n            statusShort !== 'INT' &&\n            statusShort !== 'PST') {\n            return 'Match terminé'\n        } else if (statusShort === 'HT') {\n            return 'Mi-temps'\n        } else return `${minutes}'`\n\n    }\n\n\n    return !fixture || homeScore == null || awayScore == null ? (\n        <div style={{ padding: 20, paddingTop: 0 }}>\n            <Skeleton active />\n        </div>\n    ) : (\n            <div className='fixture-line'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th><img src={fixture.homeTeam.logo} alt=\"logo\" className='team-logo' /></th>\n                            <th><small>{fixture.homeTeam.stadium}<br />{dateTransform(fixture.date).fullDate}<br />à {dateTransform(fixture.date).fullTime}</small></th>\n                            <th><img src={fixture.awayTeam.logo} alt=\"logo\" className='team-logo' /></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className='score-teams-row'>\n                            <td className='team-name'>{fixture.homeTeam.name}</td>\n                            <td className='score-fixture'>{fixture.goalsHomeTeam} - {fixture.goalsAwayTeam}</td>\n                            <td className='team-name'>{fixture.awayTeam.name}</td>\n                        </tr>\n                        {fixture.timeElapsed && <tr className='pb-1'>\n                            <td></td>\n                            <td className='fixture-status'>{statusTranform(fixture.statusShort, fixture.timeElapsed)}</td>\n                            <td></td>\n                        </tr>}\n                        <tr className='odds-section odds-top'>\n                            <td>Cote domicile :</td>\n                            <td>Cote nul :</td>\n                            <td>Cote extérieur :</td>\n                        </tr>\n                        <tr className='odds-section odds-bottom'>\n                            <td>{fixture.oddsWinHome}</td>\n                            <td>{fixture.oddsDraw}</td>\n                            <td>{fixture.oddsWinAway}</td>\n                        </tr>\n                        {matchStarted && <tr className='prono-section'>\n                            <td className='prono-input-col'><label>Buts domicile :</label><input className='prono-input' type=\"number\" name='homeProno' value={homeScore} placeholder='Prono' disabled={true} /></td>\n                            <td className='prono-input-col'>\n                                {pronogeek.points > 0 && pronogeek.bonusFavTeam && (\n                                    <div style={{ margin: '0 10px' }}>\n                                        {user.username} a scoré <i>{pronogeek.points}pts</i> {pronogeek.exact && `(${pronogeek.potentialPoints}*2)`}<br />\n                        dont 30 pts bonus pour son équipe de <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\" rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" /></svg>\n                                    </div>\n                                )}\n                                {pronogeek.points > 0 && !pronogeek.bonusFavTeam && (\n                                    <div style={{ margin: '0 10px' }}>\n                                        {user.username} a scoré <i>{pronogeek.points}pts</i> {pronogeek.exact && `(${pronogeek.potentialPoints}*2)`}\n                                    </div>\n                                )}\n                                {pronogeek.points === 0 && pronogeek.addedToProfile && (\n                                    <div style={{ margin: '0 10px' }}>\n                                        Mauvais prono...\n                                    </div>\n                                )}\n                            </td>\n                            <td className='prono-input-col'><label>Buts extérieur :</label><input className='prono-input' type=\"number\" name='awayProno' value={awayScore} placeholder='Prono' disabled={true} /></td>\n                        </tr>}\n                        {!matchStarted && <tr>\n                            <td></td>\n                            <td>Pronogeek non visible.</td>\n                            <td></td>\n                        </tr>}\n                    </tbody>\n                </table>\n\n\n\n            </div>\n        )\n}\n\nexport default Fixture\n","import React, { useState, useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Spin, Space, Form, Input, notification } from 'antd'\nimport { signup } from '../services/auth'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { Context } from '../context'\n\nconst Signup = ({ history }) => {\n    const { user } = useContext(Context)\n    const [form] = Form.useForm()\n    const [photo, setPhoto] = useState(null)\n    const [fileName, setFileName] = useState('Charger une photo')\n    const [signupDone, setSignupDone] = useState(false)\n\n    const onFinish = async (values) => {\n        const emailCorrect = (/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(String(values.email).toLowerCase())\n        if (!emailCorrect) openNotification(`Je crois qu'il y a une faute de frappe dans ton email...`)\n        else {\n            setSignupDone(true)\n            let photoUrl = null\n            if (photo) {\n                const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, photo)\n                photoUrl = secure_url\n            }\n            await signup({ ...values, photo: photoUrl }).catch(err => {\n                openNotification(err.response.data.message.fr)\n            })\n            history.push('/login')\n            setSignupDone(false)\n        }\n    }\n\n    const uploadPhoto = e => {\n        if (e.target.files.length > 0) {\n            const file = e.target.files[0]\n            if (file.size > 1000000) return openNotification('warning', 'Attention', 'La taille du fichier ne peux pas excéder 1Mo.')\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/jpg') return openNotification('warning', 'Attention', 'La photo doit être au format JPG ou PNG.')\n            setFileName(file.name)\n            const data = new FormData()\n            data.append('file', e.target.files[0])\n            data.append('upload_preset', 'pronogeeks')\n            setPhoto(data)\n        }\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    return <div className='register-pages'>\n        {signupDone ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Enregistrement du compte...' style={{ color: ' rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: ' rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : user ? (\n            <Redirect to='/profile' />\n        ) : (\n\n                    <div className='row signup-form'>\n                        <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-xl-6 offset-xl-3'>\n                            <h2>Créer un compte</h2>\n                            <Form\n                                form={form}\n                                layout='vertical'\n                                name=\"basic\"\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                            >\n                                <Form.Item\n                                    type='email'\n                                    label=\"Email :\"\n                                    name=\"email\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: `L'email est nécessaire pour créer un compte.`,\n                                        },\n                                    ]}\n                                >\n                                    <Input style={{ borderRadius: 15.8 }} placeholder='roi.geek@pronogeeks.fr' />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Pseudo :\"\n                                    name=\"username\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Le pseudo est obligatoire et doit être unique.',\n                                        },\n                                    ]}\n                                >\n                                    <Input style={{ borderRadius: 15.8 }} placeholder='RoiGeek' />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Mot de passe :\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Tu auras besoin d\\'un mot de passe pour te connecter !',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password style={{ borderRadius: 15.8 }} placeholder='********' />\n                                </Form.Item>\n\n                                <label className='first-file-label signup-file-label' htmlFor=\"profile-pic-input-signup\">Photo de profil :</label>\n                                <br />\n                                <div className=\"custom-file custom-file-signup\">\n                                    <label className=\"profile-image custom-file-label\" htmlFor=\"profile-pic-input-signup\">\n                                        {fileName}\n                                        <input id=\"profile-pic-input-signup\" type=\"file\" name=\"image\" className=\"custom-file-input\" onChange={uploadPhoto} />\n                                    </label>\n                                </div>\n\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <button type='submit' className='btn my-btn submit-btn register-btn' style={{ marginTop: 10 }}>Créer mon compte</button>\n                                </div>\n                            </Form>\n                            <div className='social-logins'>\n                                <h4>Se connecter avec :</h4>\n                                <div className='social-login-links'>\n                                    <a href={`${process.env.REACT_APP_BACKENDPOINT}/auth/facebook`}><img src='/images/facebook-logo.png' alt='Facebook' /></a>\n                                    <a href={`${process.env.REACT_APP_BACKENDPOINT}/auth/google`}><img src='/images/google-logo.png' alt='Google' /></a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    </div>\n}\n\nexport default Signup\n","import React, { useContext } from 'react'\nimport { Form, Input, notification } from 'antd'\nimport { login } from '../services/auth'\nimport { Context } from '../context'\nimport { Redirect } from 'react-router-dom'\n\nconst Login = ({ history }) => {\n    const [form] = Form.useForm()\n    const { loginUser, user } = useContext(Context)\n\n    const onFinish = async (values) => {\n        const user = await login(values).catch(err => openNotification(err.response.data.message))\n        loginUser(user)\n        history.push('/profile')\n    }\n\n    const openNotification = message => {\n        notification.warning({\n            message: \"Error\",\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    return user ? <Redirect to='/profile' /> : (\n        <div className='register-pages'>\n            <div className='row signup-form'>\n                <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4'>\n                    <h2>Se connecter</h2>\n                    <Form\n                        form={form}\n                        layout='vertical'\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                    >\n                        <Form.Item\n                            type='email'\n                            label=\"Email :\"\n                            name=\"email\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: `L'email est nécessaire pour te connecter à ton compte`,\n                                },\n                            ]}\n                        >\n                            <Input style={{ borderRadius: 15.8 }} placeholder='roi.geek@pronogeeks.fr' />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Mot de passe :\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: `N'oublie pas ton mot de passe !`,\n                                },\n                            ]}\n                        >\n                            <Input.Password style={{ borderRadius: 15.8 }} placeholder='********' />\n                        </Form.Item>\n\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <button type='submit' className='btn register-btn my-btn submit-btn'>Me connecter</button>\n                        </div>\n                    </Form>\n                    <div className='social-logins'>\n                        <h4>Se connecter avec :</h4>\n                        <div className='social-login-links'>\n                            <a href={`${process.env.REACT_APP_BACKENDPOINT}/auth/facebook`}><img src='/images/facebook-logo.png' alt='Facebook' /></a>\n                            <a href={`${process.env.REACT_APP_BACKENDPOINT}/auth/google`}><img src='/images/google-logo.png' alt='Google' /></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useContext } from 'react'\nimport { Context } from '../context'\nimport { Redirect, Link } from 'react-router-dom'\n\nconst Home = () => {\n\n    const { user } = useContext(Context)\n\n    return user ? <Redirect to='/profile' /> : (\n        <div className='my-content-homepage'>\n            <div className='row'>\n                <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                    <div className='home-div'>\n                        <div>\n                            <h2>Bienvenue sur<br />\n                                <img className='logo-homepage' src='/images/logo-blue-home.png' alt='Logo' /></h2>\n                            <p className='home-message'>Mesure-toi aux maîtres geeks des pronostics de Ligue 1\n                <br />\n                et deviens expert pronogeekeur !\n                </p>\n                        </div>\n                        <div className='home-register'>\n                            <Link className='btn my-btn login-btn' to='/login'>Se connecter</Link>\n                            <Link className='btn my-btn signup-btn' to='/signup'>Créer un compte</Link>\n                        </div>\n                        <div className='social-logins'>\n                            <h4>Se connecter avec :</h4>\n                            <div className='social-login-links'>\n                                <a href={`${process.env.REACT_APP_BACKENDPOINT}/auth/facebook`}><img src='/images/facebook-logo.png' alt='Facebook' /></a>\n                                <a href={`${process.env.REACT_APP_BACKENDPOINT}/auth/google`}><img src='/images/google-logo.png' alt='Google' /></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { updateProfile, getProfile, updatePhoto } from '../services/auth'\nimport { fetchPlayers } from '../services/user'\nimport axios from 'axios'\nimport { Spin, Space, notification } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\n\nconst Profile = ({ loading }) => {\n    const { user, loginUser } = useContext(Context)\n    const [photoLoading, setPhotoLoading] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [usernameInput, setUsernameInput] = useState('')\n    const [usernameChanged, setUsernameChanged] = useState(false)\n    const [seasonID, setSeasonID] = useState(null)\n    const [seasonRankingFull, setSeasonRankingFull] = useState(null)\n    const [seasonRanking, setSeasonRanking] = useState(null)\n    const [userRanking, setUserRanking] = useState(null)\n\n    const uploadPhoto = async e => {\n        const file = e.target.files[0]\n        if (file.size > 1000000) return openNotification('warning', 'Attention', 'La taille du fichier ne peux pas excéder 1Mo. La photo de profil reste inchangée.')\n        if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/jpg') return openNotification('warning', 'Attention', 'Le fichier doit être au format JPG ou PNG. La photo de profil reste inchangée.')\n        setPhotoLoading(true)\n        const data = new FormData()\n        data.append('file', e.target.files[0])\n        data.append('upload_preset', 'pronogeeks')\n        const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, data)\n        const user = await updatePhoto({ photo: secure_url })\n        loginUser(user)\n        setPhotoLoading(false)\n    }\n\n    const saveUsername = async () => {\n        let saved = true\n        await updateProfile({ username: usernameInput }).catch(err => {\n            saved = false\n            openNotification('warning', 'Attention', err.response.data.message.fr)\n        })\n        if (saved) {\n            setUsernameChanged(true)\n            const user = await getProfile()\n            loginUser(user)\n            setShowModal(false)\n            setUsernameChanged(false)\n        }\n    }\n\n    useEffect(() => {\n        setUsernameInput(user?.username)\n        const getPlayers = async () => {\n            if (user?.seasons.length > 0) {\n                const seasonID = user.seasons[user.seasons.length - 1].season._id.toString()\n                setSeasonID(user.seasons[user.seasons.length - 1].season._id.toString())\n                const players = await fetchPlayers(seasonID)\n                const rankedPlayers = players.sort((a, b) => {\n                    return b.seasons.filter(season => season.season.toString() === seasonID)[0].totalPoints - a.seasons.filter(season => season.season.toString() === seasonID)[0].totalPoints\n                })\n                const userRanking = rankedPlayers.map(player => player.username).indexOf(user.username) + 1\n                const rankedPlayers20 = rankedPlayers.slice(0, 20)\n                setUserRanking(userRanking)\n                setSeasonRankingFull(rankedPlayers)\n                setSeasonRanking(rankedPlayers20)\n            }\n        }\n        getPlayers()\n    }, [user])\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    const setRank = (num) => {\n        if (parseInt(num) === 1) return '1er(e)'\n        else return `${num}ème`\n    }\n\n    return usernameChanged || loading ? (<div className='my-profile-page'>\n        <div className='loader-container'>\n            <Space size='large'>\n                <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n            </Space>\n        </div>\n    </div>\n    ) : (\n            <div className='my-profile-page row'>\n                <div className='my-profile col-10 offset-1 col-lg-4'>\n                    <section className='about-section'>\n                        <h2>Bonjour {user.username}\n                            <button onClick={() => setShowModal(!showModal)}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg></button>\n                        </h2>\n                        <div className='profile-details'>\n                            <div className='profile-picture-container'>\n                                {!photoLoading && <img src={user.photo} alt=\"Profile pic\" className='profile-pic' />}\n                                {photoLoading && <div className='profile-pic'>\n                                    <Space size='medium'>\n                                        <Spin size='medium' tip='Chargement de la photo...' style={{ color: 'rgb(26, 145, 254)' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(26, 145, 254)', fontSize: '2rem', marginBottom: 8 }} />} />\n                                    </Space>\n                                </div>}\n                                <label className='first-file-label' htmlFor=\"profile-pic-input\">Changer de photo de profil :</label>\n                                <div className=\"custom-file\">\n                                    <label className=\"profile-image custom-file-label\" htmlFor=\"profile-pic-input\">\n                                        Charger une photo\n                            <input id=\"profile-pic-input\" type=\"file\" name=\"image\" className=\"custom-file-input\" onChange={uploadPhoto} />\n                                    </label>\n                                </div>\n                            </div>\n                            {user.seasons.length > 0 && user.seasons[user.seasons.length - 1].favTeam && <div className='favteam-info'>\n                                <div>\n                                    <img src={user.seasons[user.seasons.length - 1].favTeam.logo} alt=\"Logo équipe de coeur\" />\n                                </div>\n                                <h5>{user.seasons[user.seasons.length - 1].favTeam.name} est ton équipe de coeur<br />pour la saison {user.seasons[user.seasons.length - 1].season.year} de {user.seasons[user.seasons.length - 1].season.leagueName}.</h5>\n                            </div>}\n                        </div>\n                    </section>\n                    <section className='geekleagues-section'>\n                        <h2>Ligues Geek</h2>\n                        <Link to='/myGeekLeagues/new' className='btn my-btn new-league'>Nouvelle ligue</Link>\n                        {user.geekLeagues.length > 0 && <ul className='list-group list-group-flush geekleagues-list-profile mt-4'>\n                            {seasonID && !seasonRankingFull && <div className='pt-4'>\n                                <Space size='large'>\n                                    <Spin size='large' tip='Chargement des ligues...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                                </Space>\n                            </div>}\n                            {seasonRankingFull && <li className='list-group-item d-flex justify-content-between align-items-center mb-2'><span><b>Mes ligues</b></span>\n                                <span><b>Mon classement</b></span></li>}\n                            {seasonRankingFull && user.geekLeagues.map(league => <Link to={`/myGeekLeagues/${league._id}`} key={league._id}>\n                                <li className='list-group-item d-flex justify-content-between align-items-center'>\n                                    <span style={{ color: 'rgb(4, 78, 199)' }}>{league.name}</span>\n                                    <span className='badge badge-success badge-pill my-badge'>{setRank(seasonRankingFull.filter(player => {\n                                        let result = false\n                                        league.geeks.forEach(geek => {\n                                            if (geek._id === player._id) result = true\n                                        })\n                                        return result\n                                    }).map(player => player._id).indexOf(user._id) + 1)} / {league.geeks.length}</span>\n                                </li>\n                            </Link>)}\n                        </ul>}\n                    </section>\n                </div>\n                {seasonID && <section className='my-profile-ranking col-10 offset-1 col-lg-4 offset-lg-2'>\n                    {!seasonRanking && <div className='pt-4'>\n                        <Space size='large'>\n                            <Spin size='large' tip='Chargement du classement...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                        </Space>\n                    </div>}\n                    {seasonRanking && <>\n                        <h2>{user.seasons[user.seasons.length - 1].season.leagueName} saison {user.seasons[user.seasons.length - 1].season.year}\n                            <br />\n                    Classement général\n                    </h2>\n                        <ul className='list-group list-group-flush season-ranking'>\n                            <li className='list-group-item d-flex justify-content-between align-items-center mb-2'>\n                                <span><b>{setRank(userRanking)} : {user.username}</b></span>\n                                <span className='badge badge-success badge-pill my-badge'>{user.seasons[user.seasons.length - 1].totalPoints} pts</span>\n                            </li>\n                            {seasonRanking.map((player, index) => <li key={player._id} className='list-group-item d-flex justify-content-between align-items-center'>\n                                {player._id === user._id && <span><b>{setRank(index + 1)} : {player.username}</b></span>}\n                                {player._id !== user._id && <span>{setRank(index + 1)} : {player.username}</span>}\n                                <span className='badge badge-success badge-pill my-badge'>{player.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].totalPoints} pts</span></li>\n\n                            )}\n                        </ul>\n                    </>}\n                </section>}\n                {showModal && <div id=\"update-username-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"update-username-modal-title\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                {user.username && <h5 className=\"modal-title\">Changer de pseudo :</h5>}\n                                {!user.username && <h5 className=\"modal-title\">Tu dois choisir un pseudo pour continuer :</h5>}\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setShowModal(false)}>\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <label htmlFor=\"pseudo-input-profile\">Entrer un nouveau pseudo :</label>\n                                <input type=\"text\" id='pseudo-input-profile' name='username' value={usernameInput} onChange={(e) => setUsernameInput(e.target.value)} />\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"my-btn close\" onClick={() => setShowModal(false)}>Fermer</button>\n                                <button type=\"button\" className=\" my-btn save\" onClick={saveUsername}>Enregistrer</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n}\n\nexport default Profile\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/seasons` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/seasons`\n\nconst seasonService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const getSeasonData = async(seasonID) => {\n    const {\n        data: {\n            season\n        }\n    } = await seasonService.get(`/${seasonID}`)\n    return season\n}\n\nexport const getSeasons = async() => {\n    const {\n        data: {\n            seasons\n        }\n    } = await seasonService.get('/')\n    return seasons\n}\n\nexport const getMatchweekFixtures = async(seasonID, matchweekNum) => {\n    const {\n        data: {\n            fixtures\n        }\n    } = await seasonService.get(`/${seasonID}/${matchweekNum}`)\n    return fixtures\n}\n\nexport const getSeasonTeams = async(seasonID) => {\n    const {\n        data: {\n            teams\n        }\n    } = await seasonService.get(`/teams/${seasonID}`)\n    return teams\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { getSeasonData } from '../services/seasons'\nimport { updateProfileWithSeason, updateFavTeam } from '../services/user'\nimport { getProfile } from '../services/auth'\nimport { Space, Spin, notification } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\nimport { useInput } from '../customHooks'\n\nconst PronogeeksSearch = ({ match: { params: { seasonID } }, loading }) => {\n\n    const { loginUser } = useContext(Context)\n\n    const [seasonTeams, setSeasonTeams] = useState(null)\n    const [newSeason, setNewSeason] = useState(false)\n    const [matchweek, setMatchweek] = useState(null)\n    const favTeam = useInput('')\n\n    useEffect(() => {\n        const updateProfile = async (seasonID) => {\n            return await updateProfileWithSeason(seasonID)\n        }\n        const setNewUser = async () => {\n            const newSeason = await updateProfile(seasonID)\n            setNewSeason(newSeason)\n            const user = await getProfile()\n            loginUser(user)\n        }\n        setNewUser()\n\n        const fetchSeason = async (seasonID) => {\n            const season = await getSeasonData(seasonID)\n            setSeasonTeams(season.rankedTeams)\n            const fixturesToCome = season.fixtures.filter(fixture => (new Date(fixture.date).getTime() + 1000 * 60 * 120) > Date.now())\n            let nextMatchweek = fixturesToCome[0].matchweek;\n            let nextDate = fixturesToCome[0].date\n            fixturesToCome.forEach(fixture => nextMatchweek = fixture.matchweek < nextMatchweek && new Date(fixture.date).getTime() < new Date(nextDate).getTime() ? fixture.matchweek : nextMatchweek)\n            setMatchweek(nextMatchweek)\n        }\n        fetchSeason(seasonID)\n\n    }, [seasonID, loginUser])\n\n    const saveFavTeam = async () => {\n        if (favTeam.value === '') return openNotification('warning', 'Attention', 'Tu dois choisir une équipe de coeur avant de continuer.')\n        else {\n            await updateFavTeam(seasonID, { favTeam: favTeam.value })\n            openNotification('success', 'Équipe de coeur enregistrée.')\n            const user = await getProfile()\n            loginUser(user)\n            setNewSeason(false)\n        }\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    return <div className='pronogeeks-bg'>\n        {!seasonTeams || loading ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : newSeason ? (\n            <div className='loader-container'>\n                <div className='choose-favteam'>\n                    <label htmlFor=\"favteam-select\">Choisis une équipe de coeur pour cette saison.\n                            <br />\n                            NB : Chaque bon prono sur un match de ton équipe de coeur te rapporte un bonus de 30 pts.\n                            <br />\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\" /></svg> Réfléchis bien, tu ne pourras plus changer ensuite...\n                        </label>\n                    <br />\n                    <select name=\"favTeam\" id=\"favteam-select\" {...favTeam} >\n                        <option value=\"\" disabled>Sélectionner une équipe</option>\n                        {seasonTeams.map(team =>\n                            <option key={team._id} value={team._id}>{team.name}</option>\n                        )}\n                    </select>\n                    <br />\n                    <button className='btn my-btn save-favteam-btn' onClick={saveFavTeam}>Confirmer</button>\n                </div>\n            </div>\n        ) : !matchweek ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : (\n                        <Redirect to={`/pronogeeks/${seasonID}/matchweek/${matchweek}`} />\n                    )\n        }\n    </div>\n}\n\nexport default PronogeeksSearch\n","import {\n    useState\n} from 'react'\n\nexport const useInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue)\n    const onChange = e => setValue(e.target.value)\n    return {\n        value,\n        onChange\n    }\n}","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/fetch` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/fetch`\n\nconst apiFootballService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const updateFixturesStatus = async(seasonID, matchweekNum) => {\n    const {\n        data\n    } = await apiFootballService.get(`/fixtures/season/${seasonID}/matchweek/${matchweekNum}`)\n    return data\n}\n\nexport const updateOdds = async(seasonID, matchweekNum) => {\n    const {\n        data: {\n            message\n        }\n    } = await apiFootballService.get(`/odds/season/${seasonID}/matchweek/${matchweekNum}`)\n    return message\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { getMatchweekFixtures, getSeasonData } from '../services/seasons'\nimport { updateProfileWithMatchweek, updateProfileWithSeason } from '../services/user'\nimport { updateFixturesStatus, updateOdds } from '../services/apiFootball'\nimport { getProfile } from '../services/auth'\nimport { Fixture } from '../components'\nimport { Spin, Space, notification } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Context } from '../context'\n\nconst Pronogeeks = ({ match: { params: { matchweekNumber, seasonID } }, history, loading }) => {\n    const [season, setSeason] = useState(null)\n    const [fixtures, setFixtures] = useState(null)\n    const [matchweekPoints, setMatchweekPoints] = useState(null)\n    const [matchweekBonus, setMatchweekBonus] = useState(null)\n    const [matchweekCorrects, setMatchweekCorrects] = useState(null)\n    const [showRules, setShowRules] = useState(false)\n    const [scoresUpdated, setScoresUpdated] = useState(false)\n    const [oddsUpdated, setOddsUpdated] = useState(false)\n    const [lastOddsUpdated, setLastOddsUpdated] = useState(null)\n    const [lastScoresUpdated, setLastScoresUpdated] = useState(null)\n\n    const { loginUser, user } = useContext(Context)\n\n    const setPoints = user => {\n        const seasonUser = user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0]\n        const matchweekUser = seasonUser.matchweeks.filter(matchweek => matchweek.number.toString() === matchweekNumber.toString())[0]\n        setMatchweekPoints(matchweekUser.totalPoints)\n        setMatchweekBonus(matchweekUser.bonusPoints)\n        setMatchweekCorrects(matchweekUser.numberCorrects)\n    }\n\n    const getStatus = async () => {\n        const data = await updateFixturesStatus(seasonID, matchweekNumber)\n        if (data.message) return openNotification('warning', 'Actualisation abortée', data.message.fr)\n        else {\n            setFixtures(null)\n            setFixtures(data.fixtures)\n            openNotification('success', 'Scores actualisés')\n            const user = await getProfile()\n            loginUser(user)\n            setPoints(user)\n        }\n    }\n\n    const getOdds = async () => {\n        const message = await updateOdds(seasonID, matchweekNumber)\n        if (message) return openNotification('warning', 'Actualisation abortée', message.fr)\n        else {\n            const updated = fetchFixtures(seasonID, matchweekNumber)\n            if (updated) {\n                openNotification('success', 'Cotes actualisées')\n            }\n        }\n    }\n\n    const fetchFixtures = async (season, matchweek) => {\n        const fixtures = await getMatchweekFixtures(season, matchweek)\n        fixtures.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n        setFixtures(null)\n        setFixtures(fixtures)\n        return true\n    }\n\n    const dateTransform = (date) => {\n        date = new Date(date)\n        let month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n        let minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes()\n        return `${date.getDate()}/${month}/${date.getFullYear()} à ${date.getHours()}h${minutes}`\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    useEffect(() => {\n\n        const setPoints = user => {\n            const seasonUser = user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0]\n            const matchweekUser = seasonUser.matchweeks.filter(matchweek => matchweek.number.toString() === matchweekNumber.toString())[0]\n            setMatchweekPoints(matchweekUser.totalPoints)\n            setMatchweekBonus(matchweekUser.bonusPoints)\n            setMatchweekCorrects(matchweekUser.numberCorrects)\n        }\n\n        const fetchStatus = async () => {\n            const { fixtures } = await updateFixturesStatus(seasonID, matchweekNumber)\n            setFixtures(null)\n            setFixtures(fixtures)\n            openNotification('success', 'Scores actualisés')\n            const user = await getProfile()\n            loginUser(user)\n            setPoints(user)\n        }\n\n        const fetchOdds = async () => {\n            await updateOdds(seasonID, matchweekNumber)\n            const updated = fetchFixtures(seasonID, matchweekNumber)\n            if (updated) {\n                openNotification('success', 'Cotes actualisées')\n            }\n        }\n\n        if (fixtures && user) {\n            const fixtureDates = fixtures.map(fixture => new Date(fixture.date).getTime())\n            const minDate = Math.min(...fixtureDates)\n            const maxDate = Math.max(...fixtureDates)\n            const fixturesInLessThanOneWeek = (minDate - Date.now()) < 1000 * 60 * 60 * 24 * 7\n\n            // Update fixtures results from API-football data if last update happened more than 30minutes ago, first game of matchweek is in less than 1 week and last game of matchweek was over for less than 2 days.\n            const fixtureUpdates = fixtures.map(fixture => new Date(fixture.lastScoreUpdate).getTime())\n            const lastUpdate = Math.max(...fixtureUpdates)\n            setLastScoresUpdated(lastUpdate)\n\n            const fixturesOverForLessThanTwoDays = (Date.now() - maxDate) < 1000 * 60 * 60 * 24 * 2\n            const fixturesUpdatedMoreThanThirtyMinutesAgo = Date.now() - lastUpdate > 1000 * 60 * 30\n\n            if (fixturesInLessThanOneWeek && fixturesOverForLessThanTwoDays && fixturesUpdatedMoreThanThirtyMinutesAgo && !scoresUpdated && (user.role === 'SUPER GEEK' || user.role === 'GEEK ADMIN')) {\n                setScoresUpdated(true)\n                fetchStatus()\n                setLastScoresUpdated(Date.now())\n            }\n\n            // Update fixtures odds from API-football data if last update happened more than a day ago, first game of matchweek is in less than 1 week and last game of matchweek hasn't started yet\n            const fixtureOddsUpdates = fixtures.map(fixture => new Date(fixture.lastOddsUpdate).getTime())\n            const lastOddsUpdate = Math.max(...fixtureOddsUpdates)\n            setLastOddsUpdated(lastOddsUpdate)\n\n            const allFixturesStarted = Date.now() - maxDate > 0\n            const oddsUpdatedMoreThanOneDayAgo = Date.now() - lastOddsUpdate > 1000 * 60 * 60 * 24\n\n            if (fixturesInLessThanOneWeek && !allFixturesStarted && oddsUpdatedMoreThanOneDayAgo && !oddsUpdated && (user.role === 'SUPER GEEK' || user.role === 'GEEK ADMIN')) {\n                setOddsUpdated(true)\n                fetchOdds()\n                setLastOddsUpdated(Date.now())\n            }\n        }\n\n    }, [fixtures, scoresUpdated, oddsUpdated, matchweekNumber, seasonID, user])\n\n    useEffect(() => {\n\n        const setPoints = user => {\n            const seasonUser = user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0]\n            const matchweekUser = seasonUser.matchweeks.filter(matchweek => matchweek.number.toString() === matchweekNumber.toString())[0]\n            setMatchweekPoints(matchweekUser.totalPoints)\n            setMatchweekBonus(matchweekUser.bonusPoints)\n            setMatchweekCorrects(matchweekUser.numberCorrects)\n        }\n\n        const updateProfile = async (season, matchweek) => {\n            await updateProfileWithSeason(season)\n            await updateProfileWithMatchweek(season, matchweek)\n        }\n        const setNewUser = async () => {\n            await updateProfile(seasonID, matchweekNumber)\n            const user = await getProfile()\n            loginUser(user)\n            setPoints(user)\n        }\n        setNewUser()\n\n        const fetchSeason = async seasonID => {\n            const season = await getSeasonData(seasonID)\n            setSeason(season)\n        }\n        fetchSeason(seasonID)\n\n        fetchFixtures(seasonID, matchweekNumber)\n\n    }, [matchweekNumber, seasonID])\n\n    const previousPage = () => {\n        setFixtures(null)\n        history.push(`/pronogeeks/${seasonID}/matchweek/${parseInt(matchweekNumber) - 1}`)\n    }\n\n    const nextPage = () => {\n        setFixtures(null)\n        history.push(`/pronogeeks/${seasonID}/matchweek/${parseInt(matchweekNumber) + 1}`)\n    }\n\n    return !fixtures || !season || loading ? (\n        <div className='pronogeeks-bg'>\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        </div>\n    ) : (\n            <div className='pronogeeks-bg matchweek-page'>\n                {user.role === 'GEEK ADMIN' && <div>\n                    <button className='btn my-btn admin-btn top' onClick={getStatus}>Actualiser les scores</button>\n                    <button className='btn my-btn admin-btn top' onClick={getOdds}>Actualiser les cotes</button>\n                </div>}\n                <h2>\n                    <svg onClick={() => setShowRules(!showRules)} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"rgb(4, 78, 199)\" width=\"40px\" height=\"40px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\" /></svg>\n                    {season.leagueName} saison {season.year} :<br />\n                    journée {matchweekNumber}\n                </h2>\n                <ul onClick={() => setShowRules(false)} className=\"list-group list-group-flush list-fixtures col-10 offset-1 col-md-8 offset-md-2 col-xl-6 offset-xl-3\">\n                    <div className='previous-next-btns'>\n\n                        {parseInt(matchweekNumber) !== 1 && <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>}\n\n                        {matchweekBonus > 0 && <div className='score-top'>Ton total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                        {!matchweekBonus && <div className='score-top'>Ton total J{matchweekNumber} : {matchweekPoints} pts</div>}\n\n                        {parseInt(matchweekNumber) !== 38 && <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>}\n\n                    </div>\n                    <div className='list-fixtures-header'>\n                        <div className='header-title'>Domicile</div>\n                        <div>|</div>\n                        <div className='header-title'>Extérieur</div>\n                    </div>\n                    {fixtures.map(fixture => (\n                        <li className=\"list-group-item\" key={fixture._id} style={{ background: 'none' }}>\n                            <Fixture fixtureID={fixture._id} />\n                        </li>\n                    ))}\n                    <div className='previous-next-btns'>\n                        <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>\n                        {matchweekBonus > 0 && <div className='score-bottom'>Ton total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                        {!matchweekBonus && <div className='score-bottom'>Ton total J{matchweekNumber} : {matchweekPoints} pts</div>}\n                        <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>\n                    </div>\n                </ul>\n                {user.role === 'GEEK ADMIN' && <div>\n                    <button className='btn my-btn admin-btn' onClick={getStatus}>Actualiser les scores</button>\n                    <button className='btn my-btn admin-btn' onClick={getOdds}>Actualiser les cotes</button>\n                </div>}\n                {showRules && <div className='rules-box'>\n                    <span onClick={(() => setShowRules(false))}>X</span>\n                    <h4>Règles des pronogeeks :</h4>\n                    <hr />\n                    <ul>\n                        <li>Les statuts et résultats des matchs sont actualisés en moyenne toutes les 30 minutes (à partir de 7 jours avant le début de la journée) et les points de pronogeeks avec. (dernière mise à jour le {dateTransform(lastScoresUpdated)})</li><br />\n                        <li>Les cotes sont actualisées une fois par jour (à partir de 7 jours avant le début de la journée). Une fois un match commencé, ses cotes ne changent plus. (dernière mise à jour le {dateTransform(lastOddsUpdated)})</li><br />\n                        <li>Il n'est plus possible de changer son pronogeek après le coup d'envoi.</li><br />\n                        <li>Un pronogeek <b>correct</b> (bon vainqueur ou match nul) rapporte le nombre de points indiqués dans les cotes de la rencontre.</li><br />\n                        <li>Un pronogeek <b>exact</b> (score exact bien pronogeeké) rapporte le double de la cote correspondante.</li><br />\n                        <li>Un pronogeek correct sur un match de son <b>équipe de coeur</b> (qu'elle soit gagnante ou perdante) rapporte 30 points bonus.</li><br />\n                        <li>Détail des bonus par journée de {season.leagueName} :\n                        <ul>\n                                <li>Moins de 5 pronos corrects : 0pt bonus</li>\n                                <li>5 pronos corrects: 50pts bonus</li>\n                                <li>6 pronos corrects: 100pts bonus</li>\n                                <li>7 pronos corrects: 200pts bonus</li>\n                                <li>8 pronos corrects: 300pts bonus</li>\n                                <li>9 pronos corrects: 500pts bonus</li>\n                                <li>10 pronos corrects: 700pts bonus</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>}\n            </div>\n\n        )\n}\n\nexport default Pronogeeks\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'production' ?\n    `/api/geekLeagues` :\n    `${process.env.REACT_APP_BACKENDPOINT}/api/geekLeagues`\n\nconst geekLeagueService = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nexport const createLeague = async values => {\n    const {\n        data: {\n            geekLeague\n        }\n    } = await geekLeagueService.post('/', values)\n    return geekLeague\n}\n\nexport const fetchLeague = async leagueID => {\n    const {\n        data: {\n            geekLeague\n        }\n    } = await geekLeagueService.get(`/${leagueID}`)\n    return geekLeague\n}\n\nexport const fetchMatchweekRanking = async(geekLeagueID, seasonID, matchweekNumber) => {\n    const {\n        data: {\n            geeks\n        }\n    } = await geekLeagueService.get(`/ranking/${geekLeagueID}/season/${seasonID}/matchweek/${matchweekNumber}`)\n    return geeks\n}\n\nexport const getUserLeagues = async() => {\n    const {\n        data: {\n            geekLeagues\n        }\n    } = await geekLeagueService.get('/')\n    return geekLeagues\n}\n\nexport const editGeekLeague = async(geekLeagueID, name, geeks) => {\n    const {\n        data: {\n            geekLeague\n        }\n    } = await geekLeagueService.put(`/${geekLeagueID}`, {\n        name,\n        geeks\n    })\n    return geekLeague\n}\n\nexport const outGeekLeague = async(geekLeagueID) => {\n    await geekLeagueService.get(`out/${geekLeagueID}`)\n    return true\n}\n\nexport const deleteGeekLeague = async geekLeagueID => {\n    await geekLeagueService.delete(`/${geekLeagueID}`)\n    return true\n}","import React, { useEffect, useState, useContext } from 'react'\nimport { Spin, Space, Form, Input, notification, Select } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { createLeague } from '../services/geekLeague'\nimport { getUsers } from '../services/user'\nimport { getProfile } from '../services/auth'\nimport { Context } from '../context'\n\nconst { Option } = Select\n\nconst NewGeekLeague = ({ history, loading }) => {\n    const { user, loginUser } = useContext(Context)\n    const [form] = Form.useForm()\n    const [users, setUsers] = useState(null)\n    const [creating, setCreating] = useState(false)\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            const allUsers = await getUsers()\n            const users = allUsers.filter(oneUser => oneUser._id !== user?._id)\n            setUsers(users)\n        }\n        fetchUsers()\n    }, [user])\n\n    const newLeague = async (values) => {\n        if (!values.name || !values.geeks || values.geeks.length < 1) return openNotification('warning', 'Attention', 'Tous les champs sont requis.')\n        setCreating(true)\n        const geekLeague = await createLeague(values)\n        openNotification('success', `Ligue \"${values.name}\" créée`)\n        history.push(`/myGeekLeagues/${geekLeague._id}`)\n        setCreating(false)\n        const user = await getProfile()\n        loginUser(user)\n    }\n\n    const openNotification = (type, title, message) => {\n        notification[type]({\n            message: title,\n            description: message,\n            placement: 'bottomRight',\n            className: 'notification-box'\n        })\n    }\n\n    return <div className='geekleague-bg'>\n        {!users || creating || loading ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : (\n                <div className='geekleague-form'>\n                    <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-xl-6 offset-xl-3'>\n                        <h2>Créer une ligue</h2>\n                        <Form\n                            form={form}\n                            layout='vertical'\n                            name=\"basic\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={newLeague}\n                        >\n                            <Form.Item\n                                type='text'\n                                label=\"Nom de la ligue :\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: `Le nom de ligue est nécessaire.`,\n                                    },\n                                ]}\n                            >\n                                <Input style={{ borderRadius: 15.8 }} placeholder='Ma Ligue Geek' />\n                            </Form.Item>\n                            <Form.Item\n                                type='text'\n                                label=\"Sélectionne d'autres geeks :\"\n                                name=\"geeks\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: `Tu ne peux pas créer de ligue sans autres geeks.`,\n                                    },\n                                ]}\n                            >\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: '100%', borderRadius: 15.8, overflow: 'hidden', textAlign: 'left' }}\n                                    placeholder=\"Ajoute des geeks à ta ligue !\"\n                                    optionLabelProp=\"label\"\n                                    optionFilterProp='label'\n                                >\n                                    {users?.map(user => <Option key={user._id} value={user._id} label={user.username}>\n                                        <div className=\"demo-option-label-item\">\n                                            <span role=\"img\" aria-label={user.username}>\n                                                <img src={user.photo} alt=\"profile\" className='profile-pic-preview' />\n                                            </span>\n                                        &nbsp;&nbsp;{user.username}\n                                        </div>\n                                    </Option>)}\n                                </Select>\n                            </Form.Item>\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <button type='submit' className='btn my-btn create-league-btn' style={{ marginTop: 10 }}>Créer ligue</button>\n                            </div>\n                        </Form>\n                    </div>\n                </div>\n            )\n        }\n    </div>\n}\n\nexport default NewGeekLeague","import React, { useState, useEffect, useContext } from 'react'\nimport { Context } from '../context'\nimport { fetchLeague, editGeekLeague, deleteGeekLeague, outGeekLeague } from '../services/geekLeague'\nimport { getProfile } from '../services/auth'\nimport { getSeasons } from '../services/seasons'\nimport { getUsers } from '../services/user'\nimport { Spin, Space, Form, Input, Select } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\n\nconst { Option } = Select\n\nconst GeekLeague = ({ match: { params: { geekLeagueID } }, history, loading }) => {\n    const { user, loginUser } = useContext(Context)\n    const [geekLeague, setGeekLeague] = useState(null)\n    const [seasons, setSeasons] = useState(null)\n    const [showModal, setShowModal] = useState(false)\n    const [showDelete, setShowDelete] = useState(false)\n    const [showOut, setShowOut] = useState(false)\n    const [users, setUsers] = useState(null)\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getLeague = async () => {\n            const geekLeague = await fetchLeague(geekLeagueID)\n            setGeekLeague(geekLeague)\n        }\n        getLeague()\n    }, [geekLeagueID])\n\n    useEffect(() => {\n        const getAllSeasons = async () => {\n            const seasons = await getSeasons()\n            setSeasons(seasons)\n        }\n        getAllSeasons()\n        const fetchUsers = async () => {\n            if (geekLeague) {\n                const allUsers = await getUsers()\n                const users = allUsers.filter(oneUser => {\n                    let result = true\n                    geekLeague.geeks.forEach(geek => {\n                        if (geek._id.toString() === oneUser._id.toString()) result = false\n                    })\n                    return result\n                })\n                setUsers(users)\n            }\n        }\n        fetchUsers()\n    }, [geekLeague])\n\n    const editLeague = async values => {\n        const geekLeague = await editGeekLeague(geekLeagueID, values.name, values.geeks)\n        setShowModal(false)\n        setGeekLeague(geekLeague)\n        const user = await getProfile()\n        loginUser(user)\n    }\n\n    const deleteLeague = async () => {\n        await deleteGeekLeague(geekLeagueID)\n        const user = await getProfile()\n        loginUser(user)\n        history.push('/myGeekLeagues')\n    }\n\n    const outLeague = async () => {\n        await outGeekLeague(geekLeagueID)\n        const user = await getProfile()\n        loginUser(user)\n        history.push('/myGeekLeagues')\n    }\n\n    const setRank = (num) => {\n        if (parseInt(num) === 1) return '1er(e)'\n        else return `${num}ème`\n    }\n\n    return <div className='geekleague-bg geekleague-details'>\n        {!geekLeague || !seasons || loading ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : (\n                <div className='geekleague-page container'>\n                    <h2>Ligue \"{geekLeague.name}\"\n                            {geekLeague.creator.toString() === user._id.toString() && <>\n                            <button onClick={() => {\n                                setShowModal(!showModal)\n                                setShowDelete(false)\n                            }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg></button>\n                            <button onClick={() => {\n                                setShowDelete(!showDelete)\n                                setShowModal(false)\n                            }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" /></svg></button>\n                        </>}\n                        {geekLeague.creator.toString() !== user._id.toString() &&\n                            <button onClick={() => setShowOut(!showOut)}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" /></svg></button>\n                        }\n                    </h2>\n                    <div className='row geekleague-seasons' onClick={() => {\n                        setShowModal(false)\n                        setShowDelete(false)\n                        setShowOut(false)\n                    }}>\n                        {seasons.map(season => <div key={season._id} className='league-season-ranking-container col-12 col-lg-6'>\n                            <div className='league-season-ranking'>\n                                <h4>{season.leagueName} saison {season.year}<br />\n                                Classement général</h4>\n                                <ul className='list-group list-group-flush geekleague-ranking-detail mt-2'>\n                                    {geekLeague.geeks.sort((a, b) => {\n                                        let result;\n                                        if (!a.seasons && !b.seasons) result = -1\n                                        else if (!a.seasons) result = 1\n                                        else if (!b.seasons) result = -1\n                                        else if (a.seasons.length > 0 && b.seasons.length > 0) {\n                                            result = b.seasons.filter(seas => seas.season.toString() === season._id.toString())[0].totalPoints - a.seasons.filter(seas => seas.season.toString() === season._id.toString())[0].totalPoints\n                                        } else if (a.seasons.length > 0 && b.seasons.length < 1) result = -1\n                                        else if (a.seasons.length < 1 && b.seasons.length > 0) result = 1\n                                        else if (a.seasons.length < 1 && b.seasons.length < 1) result = -1\n                                        return result\n                                    })\n                                        .map((geek, index) => <li className='list-group-item d-flex justify-content-between align-items-center' key={geek._id}>\n                                            {geek._id === user._id && <span><b>{setRank(index + 1)} : {geek.username}</b></span>}\n                                            {geek._id !== user._id && <span>{setRank(index + 1)} : {geek.username}</span>}\n                                            {geek.seasons.length > 0 && <span className='badge badge-success badge-pill my-badge'>{geek.seasons.filter(seas => seas.season.toString() === season._id.toString())[0]?.totalPoints} pts</span>}\n                                            {geek.seasons.length < 1 && <span className='badge badge-success badge-pill my-badge'>0 pts</span>}\n                                        </li>)\n                                    }\n                                </ul>\n                                <Link to={`/myGeekLeagues/${geekLeagueID}/season/${season._id}`}><button className='btn my-btn see-more-btn'>Détails par journée</button></Link>\n                            </div>\n                        </div>)}\n                    </div>\n                    {showModal && <div className='my-modal-edit-geekleague'>\n                        <div className=\"my-modal-body\">\n                            <span className='close-edit-modal' onClick={() => setShowModal(false)}>X</span>\n                            <h5 className=\"modal-title\">Modifier \"{geekLeague.name}\" :</h5>\n                            <hr />\n                            <Form\n                                form={form}\n                                layout='vertical'\n                                name=\"basic\"\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={editLeague}\n                            >\n                                <Form.Item\n                                    type='text'\n                                    label=\"Nom de la ligue :\"\n                                    name=\"name\"\n                                    color='black'\n                                >\n                                    <Input style={{ borderRadius: 15.8 }} placeholder={geekLeague.name} />\n                                </Form.Item>\n                                <Form.Item\n                                    type='text'\n                                    label=\"Ajoute d'autres geeks :\"\n                                    name=\"geeks\"\n\n                                >\n                                    <Select\n                                        mode=\"multiple\"\n                                        style={{ width: '100%', borderRadius: 15.8, overflow: 'hidden', textAlign: 'left', outline: 'none' }}\n                                        placeholder=\"Ajoute des geeks à ta ligue !\"\n                                        optionLabelProp=\"label\"\n                                        optionFilterProp='label'\n                                    >\n                                        {users?.map(user => <Option key={user._id} value={user._id} label={user.username}>\n                                            <div className=\"demo-option-label-item\">\n                                                <span role=\"img\" aria-label={user.username}>\n                                                    <img src={user.photo} alt=\"profile\" className='profile-pic-preview' />\n                                                </span>\n                                        &nbsp;&nbsp;{user.username}\n                                            </div>\n                                        </Option>)}\n                                    </Select>\n                                </Form.Item>\n                                <button type=\"submit\" className=\" my-btn save\">Enregistrer</button>\n                            </Form>\n                        </div>\n                    </div>}\n                    {showDelete && <div className='my-modal-delete-geekleague'>\n                        <div className=\"my-modal-body\">\n                            <span className='close-delete-modal' onClick={() => setShowDelete(false)}>X</span>\n                            <h5 className=\"modal-title\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\" /></svg>&nbsp;\n                                Es-tu sûr de vouloir supprimer \"{geekLeague.name}\" ?\n                                </h5>\n                            <hr />\n                            <button type=\"button\" className=\" my-btn delete\" onClick={deleteLeague}>Oui, supprimer</button>\n                            <button type=\"button\" className=\" my-btn return\" onClick={() => setShowDelete(false)}>Non ! Annuler</button>\n                        </div>\n                    </div>}\n                    {showOut && <div className='my-modal-delete-geekleague'>\n                        <div className=\"my-modal-body\">\n                            <span className='close-delete-modal' onClick={() => setShowOut(false)}>X</span>\n                            <h5 className=\"modal-title\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"rgb(253, 0, 7)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\" /></svg>&nbsp;\n                                Es-tu sûr de vouloir sortir de \"{geekLeague.name}\" ?\n                                </h5>\n                            <hr />\n                            <button type=\"button\" className=\" my-btn delete\" onClick={outLeague}>Oui, sortir</button>\n                            <button type=\"button\" className=\" my-btn return\" onClick={() => setShowOut(false)}>Non ! Annuler</button>\n                        </div>\n                    </div>}\n                </div>\n            )}\n    </div>\n}\n\nexport default GeekLeague\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getUserLeagues } from '../services/geekLeague'\nimport { Spin, Space } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nconst GeekLeagues = ({ loading }) => {\n    const [geekLeagues, setGeekLeagues] = useState(null)\n\n    useEffect(() => {\n        const fetchUserLeagues = async () => {\n            const geekLeagues = await getUserLeagues()\n            setGeekLeagues(geekLeagues)\n        }\n        fetchUserLeagues()\n    }, [])\n\n    return <div className='geekleague-bg geekleagues-list'>\n        {!geekLeagues || loading ? (<div className='loader-container'>\n            <Space size='large'>\n                <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n            </Space>\n        </div>\n        ) : (\n                <div className='container'>\n                    <h2>Mes Ligues Geek</h2>\n                    <div className='my-geekleagues row'>\n                        {geekLeagues.map(geekLeague => <div key={geekLeague._id} className='col-10 col-lg-6 geekleague-card-container'>\n                            <div className='geekleague-card'>\n                                <h4>{geekLeague.name}</h4>\n                                <h6>Créée par {geekLeague.creator.username} en {new Date(geekLeague.createdAt).getMonth().length > 1 ? new Date(geekLeague.createdAt).getMonth() : `0${new Date(geekLeague.createdAt).getMonth()}`}/{new Date(geekLeague.createdAt).getFullYear()}</h6>\n                                <Link to={`/myGeekLeagues/${geekLeague._id}`} className='btn my-btn new-league geekleagues-page-btn'>Voir le détail</Link>\n                            </div>\n                        </div>\n                        )}\n                    </div>\n                    <Link to='/myGeekLeagues/new' className='btn my-btn new-league geekleagues-page-btn'>Créer une ligue</Link>\n                </div>\n            )}\n    </div>\n}\n\nexport default GeekLeagues\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Context } from '../context'\nimport { getSeasonData } from '../services/seasons'\nimport { fetchLeague, fetchMatchweekRanking } from '../services/geekLeague'\nimport { Space, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\n\nconst GeekLeagueDetail = ({ match: { params: { geekLeagueID, seasonID } }, loading }) => {\n    const { user } = useContext(Context)\n    const [season, setSeason] = useState(null)\n    const [matchweek, setMatchweek] = useState(null)\n    const [lastMatchweek, setLastMatchweek] = useState(null)\n    const [geekLeague, setGeekLeague] = useState(null)\n    const [ranking, setRanking] = useState(null)\n\n    useEffect(() => {\n        const setNextMatchweek = async (seasonID) => {\n            const season = await getSeasonData(seasonID)\n            setSeason(season)\n            const lastFixtures = season.fixtures.filter(fixture => new Date(fixture.date).getTime() < Date.now())\n            if (lastFixtures.length > 0) {\n                const lastMatchweek = lastFixtures[lastFixtures.length - 1].matchweek\n                setMatchweek(lastMatchweek)\n                setLastMatchweek(lastMatchweek)\n            } else {\n                setMatchweek(1)\n                setLastMatchweek(1)\n            }\n        }\n        setNextMatchweek(seasonID)\n\n        const getGeekLeague = async (geekLeagueID) => {\n            const geekLeague = await fetchLeague(geekLeagueID)\n            setGeekLeague(geekLeague)\n        }\n        getGeekLeague(geekLeagueID)\n    }, [geekLeagueID, seasonID])\n\n    useEffect(() => {\n        if (matchweek) {\n            const updateRanking = async () => {\n                const geeks = await fetchMatchweekRanking(geekLeagueID, seasonID, matchweek)\n                setRanking(geeks)\n            }\n            updateRanking()\n        }\n    }, [matchweek, geekLeagueID, seasonID])\n\n    const setRank = (num) => {\n        if (parseInt(num) === 1) return '1er(e)'\n        else return `${num}ème`\n    }\n\n    const previousMatchweek = () => {\n        setRanking(null)\n        setMatchweek(matchweek - 1)\n    }\n\n    const nextMatchweek = () => {\n        setRanking(null)\n        setMatchweek(matchweek + 1)\n    }\n\n    return <div className='geekleague-bg geekleague-details'>\n        {loading || !geekLeague || !matchweek || !season || !ranking || !lastMatchweek ? (\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'white', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'white', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        ) : (\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-10 offset-1 col-lg-6 offset-lg-3'>\n                            <h2>Classement {geekLeague.name}</h2>\n                            <div className='ranking-geekleague-matchweek'>\n                                <div>\n                                    <div className='previous-next-btns geekleague-btns'>\n                                        {matchweek > 1 && <div><button className='btn my-btn' onClick={previousMatchweek}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>}\n                                        <h4>J{matchweek} de {season.leagueName}, saison {season.year}</h4>\n                                        {matchweek < lastMatchweek && <div><button className='btn my-btn' onClick={nextMatchweek}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>}\n                                    </div>\n                                </div>\n                                <ul className='list-group list-group-flush geekleague-ranking-detail mt-2'>\n                                    {ranking.map((geek, index) => <li key={geek._id} className='list-group-item d-flex justify-content-between align-items-center'>\n                                        {user._id === geek._id && <span><b>{setRank(index + 1)} : {geek.username}</b></span>}\n                                        {user._id !== geek._id && <span>{setRank(index + 1)} : {geek.username} <Link to={`/geek/${geek._id}/pronogeeks/${seasonID}/matchweek/${matchweek}`}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"rgba(156, 0, 99, 0.8)\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\" /></svg></Link></span>}\n                                        {geek.seasons.length > 0 && geek.seasons.filter(seas => seas.season.toString() === seasonID.toString()).length > 0 && geek.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].matchweeks.length > 0 && geek.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].matchweeks.filter(oneMatchweek => oneMatchweek.number.toString() === matchweek.toString()).length > 0 && <span className='badge badge-success badge-pill my-badge'>\n                                            {geek.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].matchweeks.filter(oneMatchweek => oneMatchweek.number.toString() === matchweek.toString())[0].totalPoints} pts\n                                        </span>}\n                                        {(geek.seasons.length < 1 || geek.seasons.filter(seas => seas.season.toString() === seasonID.toString()).length < 1 || geek.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].matchweeks.length < 1 || geek.seasons.filter(seas => seas.season.toString() === seasonID.toString())[0].matchweeks.filter(oneMatchweek => oneMatchweek.number.toString() === matchweek.toString()).length < 1) && <span className='badge badge-success badge-pill my-badge'>\n                                            0 pts\n                                        </span>}\n                                    </li>)}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n    </div >\n}\n\nexport default GeekLeagueDetail\n","import React, { useState, useEffect } from 'react'\nimport { getMatchweekFixtures, getSeasonData } from '../services/seasons'\nimport { getUser } from '../services/user'\nimport { FixtureOther } from '../components'\nimport { Spin, Space } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nconst Pronogeeks = ({ match: { params: { matchweekNumber, seasonID, geekID } }, history, loading }) => {\n    const [season, setSeason] = useState(null)\n    const [fixtures, setFixtures] = useState(null)\n    const [matchweekPoints, setMatchweekPoints] = useState(null)\n    const [matchweekBonus, setMatchweekBonus] = useState(null)\n    const [matchweekCorrects, setMatchweekCorrects] = useState(null)\n    const [user, setUser] = useState(null)\n    const [matchweekStarted, setMatchweekStarted] = useState(true)\n    const [noPronogeeks, setNoPronogeeks] = useState(false)\n\n    const fetchFixtures = async (season, matchweek) => {\n        const fixtures = await getMatchweekFixtures(season, matchweek)\n        fixtures.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n        setFixtures(null)\n        if (new Date(fixtures[0].date).getTime() > Date.now()) setMatchweekStarted(false)\n        setFixtures(fixtures)\n        return true\n    }\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const user = await getUser(geekID)\n            setUser(user)\n        }\n        fetchUser()\n    }, [geekID])\n\n    useEffect(() => {\n        const setPoints = user => {\n            if (user.seasons.length < 1 ||\n                user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString()).length < 1 ||\n                user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0].matchweeks.length < 1 ||\n                user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0].matchweeks.filter(matchweek => matchweek.number.toString() === matchweekNumber.toString()).length < 1) {\n                return setNoPronogeeks(true)\n            } else {\n                const seasonUser = user.seasons.filter(seas => seas.season._id.toString() === seasonID.toString())[0]\n                const matchweekUser = seasonUser.matchweeks.filter(matchweek => matchweek.number.toString() === matchweekNumber.toString())[0]\n                setMatchweekPoints(matchweekUser.totalPoints)\n                setMatchweekBonus(matchweekUser.bonusPoints)\n                setMatchweekCorrects(matchweekUser.numberCorrects)\n            }\n        }\n        if (user) {\n            setPoints(user)\n        }\n        const fetchSeason = async seasonID => {\n            const season = await getSeasonData(seasonID)\n            setSeason(season)\n        }\n        fetchSeason(seasonID)\n\n        fetchFixtures(seasonID, matchweekNumber)\n\n    }, [matchweekNumber, seasonID, user])\n\n    const previousPage = () => {\n        setFixtures(null)\n        setMatchweekStarted(true)\n        history.push(`/geek/${geekID}/pronogeeks/${seasonID}/matchweek/${parseInt(matchweekNumber) - 1}`)\n    }\n\n    const nextPage = () => {\n        setFixtures(null)\n        setMatchweekStarted(true)\n        history.push(`/geek/${geekID}/pronogeeks/${seasonID}/matchweek/${parseInt(matchweekNumber) + 1}`)\n    }\n\n    return !fixtures || !season || loading || !user ? (\n        <div className='pronogeeks-bg'>\n            <div className='loader-container'>\n                <Space size='large'>\n                    <Spin size='large' tip='Chargement de la page...' style={{ color: 'rgb(4, 78, 199)', fontSize: '1.2rem' }} indicator={<LoadingOutlined spin style={{ color: 'rgb(4, 78, 199)', fontSize: '3rem', marginBottom: 8 }} />} />\n                </Space>\n            </div>\n        </div>\n    ) : !matchweekStarted || noPronogeeks ? (\n        <div className='pronogeeks-bg matchweek-page'>\n            <h2>\n                {season.leagueName} saison {season.year} :<br />\n                    Pronos de {user.username} J{matchweekNumber}\n            </h2>\n            <ul className=\"list-group list-group-flush list-fixtures col-10 offset-1 col-md-8 offset-md-2 col-xl-6 offset-xl-3\">\n                <div className='previous-next-btns'>\n\n                    {parseInt(matchweekNumber) !== 1 && <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>}\n\n                    {matchweekBonus > 0 && <div className='score-top'>Total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                    {!matchweekBonus && <div className='score-top'>Total J{matchweekNumber} : {matchweekPoints} pts</div>}\n\n                    {parseInt(matchweekNumber) !== 38 && <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>}\n\n                </div>\n            </ul>\n            <h4 className='not-accessible'>Les pronos de {user.username} ne sont pas encore accessibles.</h4>\n        </div>\n    ) : (\n                <div className='pronogeeks-bg matchweek-page'>\n                    <h2>\n                        {season.leagueName} saison {season.year} :<br />\n                    Pronos de {user.username} J{matchweekNumber}\n                    </h2>\n                    <ul className=\"list-group list-group-flush list-fixtures col-10 offset-1 col-md-8 offset-md-2 col-xl-6 offset-xl-3\">\n                        <div className='previous-next-btns'>\n\n                            {parseInt(matchweekNumber) !== 1 && <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>}\n\n                            {matchweekBonus > 0 && <div className='score-top'>Total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                            {!matchweekBonus && <div className='score-top'>Total J{matchweekNumber} : {matchweekPoints} pts</div>}\n\n                            {parseInt(matchweekNumber) !== 38 && <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>}\n\n                        </div>\n                        <div className='list-fixtures-header'>\n                            <div className='header-title'>Domicile</div>\n                            <div>|</div>\n                            <div className='header-title'>Extérieur</div>\n                        </div>\n                        {fixtures.map(fixture => (\n                            <li className=\"list-group-item\" key={fixture._id} style={{ background: 'none' }}>\n                                <FixtureOther fixtureID={fixture._id} geekID={geekID} />\n                            </li>\n                        ))}\n                        <div className='previous-next-btns'>\n                            <div><button className='btn my-btn' onClick={previousPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg></button></div>\n                            {matchweekBonus > 0 && <div className='score-bottom'>Total J{matchweekNumber} : {matchweekPoints} pts<br />dont {matchweekBonus} pts bonus ({matchweekCorrects}/10)</div>}\n                            {!matchweekBonus && <div className='score-bottom'>Total J{matchweekNumber} : {matchweekPoints} pts</div>}\n                            <div><button className='btn my-btn' onClick={nextPage}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" /></svg></button></div>\n                        </div>\n                    </ul>\n                </div>\n\n            )\n}\n\nexport default Pronogeeks","import React, { useContext } from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { Context } from '../context'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const { user } = useContext(Context)\n\n    return (\n        <Route\n            {...rest}\n            render={props => user === null ? (\n                <Component {...props} loading />\n            ) : user ? (\n                <Component {...props} />\n            ) : (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                state: { from: props.location }\n                            }}\n                        />\n                    )}\n        />\n    )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { AppLayout } from './components'\nimport { Login, Signup, Home, Profile, PronogeeksSearch, Pronogeeks, NewGeekLeague, GeekLeague, GeekLeagues, GeekLeagueDetail, PronogeeksOther } from './pages'\nimport PrivateRoute from './helpers/PrivateRoute'\n\nconst NotFound = () => <h2 className='page-404-heading'>Cette page n'existe pas...<br />Retourne faire tes pronos au lieu de papilloner !</h2>\n\nconst router = () => {\n    return <Router>\n        <AppLayout>\n            <Switch>\n                <Route component={Home} path='/' exact />\n                <Route component={Signup} path='/signup' />\n                <Route component={Login} path='/login' />\n                <PrivateRoute component={Profile} path='/profile' exact />\n                <PrivateRoute component={PronogeeksSearch} path='/pronogeeks/:seasonID' exact />\n                <PrivateRoute component={Pronogeeks} path='/pronogeeks/:seasonID/matchweek/:matchweekNumber' />\n                <PrivateRoute component={PronogeeksOther} path='/geek/:geekID/pronogeeks/:seasonID/matchweek/:matchweekNumber' />\n                <PrivateRoute component={GeekLeagues} path='/myGeekleagues' exact />\n                <PrivateRoute component={NewGeekLeague} path='/myGeekleagues/new' exact />\n                <PrivateRoute component={GeekLeague} path='/myGeekleagues/:geekLeagueID' exact />\n                <PrivateRoute component={GeekLeagueDetail} path='/myGeekleagues/:geekLeagueID/season/:seasonID' />\n                <Route component={NotFound} />\n            </Switch>\n        </AppLayout>\n    </Router>\n}\n\nexport default router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router';\nimport CtxProvider from './context'\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<CtxProvider>\n  <Router />\n</CtxProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}